[{"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/index.tsx":"1","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/App.tsx":"2","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/AppContext.ts":"3","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/ApiContext.ts":"4","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/SessionContext.ts":"5","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/utils/errors-interceptor.ts":"6","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/Root.tsx":"7","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/utils/useStyles.ts":"8","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/projects/index.ts":"9","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/users/index.ts":"10","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/LoginPage.tsx":"11","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/ProfilePage.tsx":"12","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/users/UsersPage.tsx":"13","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/widgets/Alert.tsx":"14","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/ProjectsPage.tsx":"15","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/ProjectPage.tsx":"16","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/RoadMapPage.tsx":"17","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/projects/configuration.ts":"18","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/users/configuration.ts":"19","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/users/api.ts":"20","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/projects/api.ts":"21","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/Page.tsx":"22","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/users/UserEditor.tsx":"23","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/ProjectEditor.tsx":"24","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/RoadMapItem.tsx":"25","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/RoadMapComponent.tsx":"26","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/RoadMapEditor.tsx":"27","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/users/base.ts":"28","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/users/common.ts":"29","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/projects/base.ts":"30","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/projects/common.ts":"31","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/widgets/OkCancelDialog.tsx":"32","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/LaneEditorDialog.tsx":"33","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/inputs/MultiSelectEditor.tsx":"34","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/roadmap-utils.ts":"35","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/ConfigurableEditorDialog.tsx":"36","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/inputs/SelectEditor.tsx":"37","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/ConfigurableEditor.tsx":"38","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/editors/PropertyEditorDialog.tsx":"39","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/PropertyInput.tsx":"40","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/ConfigurationSelectionDialog.tsx":"41","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/PropertyTypes.ts":"42","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/properties-utils.ts":"43","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/DistributionPropertyInput.tsx":"44","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/ChoicePropertyInput.tsx":"45","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/DecimalPropertyInput.tsx":"46","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/IntegerPropertyInput.tsx":"47","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/editors/PropertyEditor.tsx":"48","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/StringPropertyInput.tsx":"49","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/distributions/distribution-utils.ts":"50","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/distributions/ExponentialDistributionInput.tsx":"51","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/distributions/UniformDistributionInput.tsx":"52","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/editors/DecimalPropertyEditor.tsx":"53","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/editors/StringPropertyEditor.tsx":"54","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/editors/IntegerPropertyEditor.tsx":"55","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/editors/DistributionPropertyEditor.tsx":"56","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/PropertySelectionDialog.tsx":"57","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/editors/ChoicePropertyEditor.tsx":"58","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/properties.ts":"59","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/RelevantPointEditorDialog.tsx":"60","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/RoadMapMenu.tsx":"61","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/widgets/JSONComponent.tsx":"62","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/RelevantPointLinksEditor.tsx":"63","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/NewLaneDialog.tsx":"64","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/NewNodeDialog.tsx":"65","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/CrossingLinkEditor.tsx":"66","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/analysis/index.ts":"67","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/analysis/configuration.ts":"68","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/analysis/api.ts":"69","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/analysis/base.ts":"70","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/analysis/AvailableAnalysisDialog.tsx":"71","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/analysis/common.ts":"72"},{"size":227,"mtime":1612470864004,"results":"73","hashOfConfig":"74"},{"size":3286,"mtime":1618347869521,"results":"75","hashOfConfig":"74"},{"size":475,"mtime":1614804673862,"results":"76","hashOfConfig":"74"},{"size":484,"mtime":1618347869373,"results":"77","hashOfConfig":"74"},{"size":256,"mtime":1614804733162,"results":"78","hashOfConfig":"74"},{"size":1318,"mtime":1614893848102,"results":"79","hashOfConfig":"74"},{"size":5242,"mtime":1617306404210,"results":"80","hashOfConfig":"74"},{"size":900,"mtime":1612470864008,"results":"81","hashOfConfig":"74"},{"size":377,"mtime":1617310044668,"results":"82","hashOfConfig":"74"},{"size":371,"mtime":1614810818750,"results":"83","hashOfConfig":"74"},{"size":1857,"mtime":1616449960066,"results":"84","hashOfConfig":"74"},{"size":3010,"mtime":1614893233698,"results":"85","hashOfConfig":"74"},{"size":2769,"mtime":1614893145374,"results":"86","hashOfConfig":"74"},{"size":825,"mtime":1614892268759,"results":"87","hashOfConfig":"74"},{"size":3133,"mtime":1616863243702,"results":"88","hashOfConfig":"74"},{"size":2318,"mtime":1617224217103,"results":"89","hashOfConfig":"74"},{"size":1130,"mtime":1617306292993,"results":"90","hashOfConfig":"74"},{"size":3146,"mtime":1617310044732,"results":"91","hashOfConfig":"74"},{"size":3140,"mtime":1614810818830,"results":"92","hashOfConfig":"74"},{"size":34997,"mtime":1614810818826,"results":"93","hashOfConfig":"74"},{"size":41639,"mtime":1617310044728,"results":"94","hashOfConfig":"74"},{"size":656,"mtime":1613469562819,"results":"95","hashOfConfig":"74"},{"size":3295,"mtime":1614893145350,"results":"96","hashOfConfig":"74"},{"size":1120,"mtime":1616020595648,"results":"97","hashOfConfig":"74"},{"size":2999,"mtime":1617308378187,"results":"98","hashOfConfig":"74"},{"size":10904,"mtime":1618347869441,"results":"99","hashOfConfig":"74"},{"size":1243,"mtime":1616859505020,"results":"100","hashOfConfig":"74"},{"size":1482,"mtime":1614810818758,"results":"101","hashOfConfig":"74"},{"size":3874,"mtime":1614810818786,"results":"102","hashOfConfig":"74"},{"size":1488,"mtime":1617310044672,"results":"103","hashOfConfig":"74"},{"size":3880,"mtime":1617310044680,"results":"104","hashOfConfig":"74"},{"size":1224,"mtime":1612470864008,"results":"105","hashOfConfig":"74"},{"size":2300,"mtime":1617632207260,"results":"106","hashOfConfig":"74"},{"size":1907,"mtime":1612470864004,"results":"107","hashOfConfig":"74"},{"size":433,"mtime":1617311058801,"results":"108","hashOfConfig":"74"},{"size":999,"mtime":1617624318926,"results":"109","hashOfConfig":"74"},{"size":1958,"mtime":1613314342122,"results":"110","hashOfConfig":"74"},{"size":4275,"mtime":1617313166192,"results":"111","hashOfConfig":"74"},{"size":1127,"mtime":1617312393387,"results":"112","hashOfConfig":"74"},{"size":2490,"mtime":1617311807625,"results":"113","hashOfConfig":"74"},{"size":1289,"mtime":1617312241146,"results":"114","hashOfConfig":"74"},{"size":199,"mtime":1612470864008,"results":"115","hashOfConfig":"74"},{"size":1479,"mtime":1617307172631,"results":"116","hashOfConfig":"74"},{"size":1159,"mtime":1617311972478,"results":"117","hashOfConfig":"74"},{"size":962,"mtime":1617312225622,"results":"118","hashOfConfig":"74"},{"size":807,"mtime":1617311807697,"results":"119","hashOfConfig":"74"},{"size":797,"mtime":1617311807657,"results":"120","hashOfConfig":"74"},{"size":3977,"mtime":1617312913708,"results":"121","hashOfConfig":"74"},{"size":757,"mtime":1617311807641,"results":"122","hashOfConfig":"74"},{"size":466,"mtime":1617307172599,"results":"123","hashOfConfig":"74"},{"size":907,"mtime":1617311807681,"results":"124","hashOfConfig":"74"},{"size":1275,"mtime":1617311972446,"results":"125","hashOfConfig":"74"},{"size":476,"mtime":1617312706549,"results":"126","hashOfConfig":"74"},{"size":472,"mtime":1617312831496,"results":"127","hashOfConfig":"74"},{"size":482,"mtime":1617312831508,"results":"128","hashOfConfig":"74"},{"size":1398,"mtime":1617312831480,"results":"129","hashOfConfig":"74"},{"size":1209,"mtime":1617312845916,"results":"130","hashOfConfig":"74"},{"size":3341,"mtime":1617312706517,"results":"131","hashOfConfig":"74"},{"size":404,"mtime":1617225421610,"results":"132","hashOfConfig":"74"},{"size":2004,"mtime":1617632284777,"results":"133","hashOfConfig":"74"},{"size":2723,"mtime":1617307203294,"results":"134","hashOfConfig":"74"},{"size":1867,"mtime":1614804054230,"results":"135","hashOfConfig":"74"},{"size":3558,"mtime":1617624325362,"results":"136","hashOfConfig":"74"},{"size":2212,"mtime":1617307276347,"results":"137","hashOfConfig":"74"},{"size":986,"mtime":1617306936818,"results":"138","hashOfConfig":"74"},{"size":2182,"mtime":1617624318958,"results":"139","hashOfConfig":"74"},{"size":377,"mtime":1618436810472,"results":"140","hashOfConfig":"74"},{"size":3146,"mtime":1618436810528,"results":"141","hashOfConfig":"74"},{"size":28747,"mtime":1618436810524,"results":"142","hashOfConfig":"74"},{"size":1488,"mtime":1618436810480,"results":"143","hashOfConfig":"74"},{"size":1678,"mtime":1618348009901,"results":"144","hashOfConfig":"74"},{"size":3880,"mtime":1618436810488,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"15f332m",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"148"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"148"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"148"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"148"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"148"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"148"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"148"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/index.tsx",[],["299","300"],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/App.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/AppContext.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/ApiContext.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/SessionContext.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/utils/errors-interceptor.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/Root.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/utils/useStyles.ts",["301","302"],"import {createStyles, makeStyles, StyleRules, Theme} from \"@material-ui/core/styles\";\nimport {BaseCSSProperties} from \"@material-ui/core/styles/withStyles\";\n\n/*\n * Trick\n */\nconst absolute: \"absolute\" = \"absolute\";\nconst relative: \"relative\" = \"relative\";\n\n\nconst useStyles = makeStyles(({palette, spacing}: Theme) => createStyles({\n    appBarTitle: {\n        flexGrow: 1\n    },\n    fab: {\n        position: absolute,\n        top: spacing(2),\n        right: spacing(2)\n    },\n    relative: {\n        position: relative\n    },\n    container: {\n        position: relative,\n        marginTop: spacing(2)\n    },\n    centerContent: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column'\n    },\n    card: {\n        padding: spacing(1)\n    },\n    formControl: {\n        margin: spacing(1),\n        minWidth: 120\n    }\n}));\n\nexport default useStyles;\n","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/projects/index.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/users/index.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/LoginPage.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/ProfilePage.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/users/UsersPage.tsx",["303"],"import {Button, Card, CardActions, CardContent, Fab, Grid, Typography} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport useStyles from \"../../utils/useStyles\";\nimport Page from \"../Page\";\nimport ApiContext from \"../../ApiContext\";\nimport UserEditor from \"./UserEditor\";\nimport {RouteComponentProps} from \"@reach/router\";\nimport AppContext from \"../../AppContext\";\nimport {User, UserRole} from \"../../api/generated/users\";\n\nexport default function UsersPage(props: RouteComponentProps) {\n  const {usersApi} = useContext(ApiContext);\n  const {notifyError} = useContext(AppContext);\n  const classes = useStyles();\n\n  const [users, setUsers] = useState<User[]>([]);\n\n  const loadUsers = useCallback(() => {\n    usersApi.getUsers().then(response => setUsers(response.data));\n  }, [usersApi]);\n\n  useEffect(() => {\n    loadUsers();\n  }, [loadUsers]);\n\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  function createUser() {\n    setSelectedUser({\n      username: \"\",\n      roles: [UserRole.Client]\n    });\n  }\n\n  function deleteUser(id: string | undefined) {\n    if (id) {\n      usersApi.deleteUser(id)\n      .then(() => loadUsers());\n    }\n  }\n\n  return (\n      <Page title=\"Users\">\n        <Fab\n            color=\"primary\"\n            aria-label=\"add\"\n            className={classes.fab}\n            onClick={createUser}>\n          <AddIcon/>\n        </Fab>\n        <Grid container spacing={1}>\n          {users && users.map(user => (\n              <Grid\n                  key={user.uuid}\n                  item xs={4}>\n                <Card className={classes.card}>\n                  <CardContent>\n                    <Typography variant=\"h5\">{user.username}</Typography>\n                    <Typography variant=\"h6\">\n                      {`Roles: ${user && user.roles && user.roles.join(\", \")}`}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={() => setSelectedUser(user)}>\n                      Edit\n                    </Button>\n                    <Button color=\"primary\" onClick={() => deleteUser(user.uuid)}>\n                      Delete\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n          ))}\n        </Grid>\n        {selectedUser && <UserEditor\n            user={selectedUser}\n            onClose={() => setSelectedUser(null)}\n            onConfirm={() => {\n              setSelectedUser(null);\n              loadUsers();\n            }}/>\n        }\n      </Page>\n  );\n}\n","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/widgets/Alert.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/ProjectsPage.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/ProjectPage.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/RoadMapPage.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/projects/configuration.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/users/configuration.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/users/api.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/projects/api.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/Page.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/users/UserEditor.tsx",["304"],"import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField\n} from \"@material-ui/core\";\nimport React, {useContext, useState} from \"react\";\nimport ApiContext from \"../../ApiContext\";\nimport MultiSelectEditor from \"../../inputs/MultiSelectEditor\";\nimport AppContext from \"../../AppContext\";\nimport useStyles from \"../../utils/useStyles\";\nimport {User, UserRole} from \"../../api/generated/users\";\n\ntype UserEditorProps = {\n  user: User;\n  onClose: () => void;\n  onConfirm: () => void;\n};\n\nexport default function UserEditor({user, onClose, onConfirm}: UserEditorProps) {\n  const {usersApi} = useContext(ApiContext);\n  const {notifyError} = useContext(AppContext);\n\n  const [username, setUsername] = useState(user.username);\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [userRoles, setUserRoles] = useState(user.roles || []);\n\n  const classes = useStyles();\n\n  function updateUser() {\n    if (user.uuid) {\n      usersApi.editRoles(user.uuid, userRoles)\n      .then(onConfirm);\n    } else if (password === confirmPassword) {\n      usersApi.createUser({\n        username: username,\n        password: password,\n        roles: userRoles\n      }).then(onConfirm);\n    }\n  }\n\n  return <Dialog\n      maxWidth={\"sm\"}\n      fullWidth={true}\n      onClose={onClose}\n      open={!!user}>\n    <DialogTitle>{user?.uuid ? `Edit user ${user?.username}` : \"Create user\"}</DialogTitle>\n    <DialogContent>\n      <div className={\"flex-column\"}>\n        {!user?.uuid && (\n            <>\n              <TextField\n                  className={classes.formControl}\n                  variant=\"outlined\"\n                  label=\"Username\"\n                  value={username}\n                  onChange={evt => setUsername(evt.target.value)}\n              />\n              <TextField\n                  className={classes.formControl}\n                  variant=\"outlined\"\n                  value={password}\n                  label=\"Password\"\n                  onChange={evt => setPassword(evt.target.value)}\n                  type=\"password\"\n              />\n              <TextField\n                  className={classes.formControl}\n                  variant=\"outlined\"\n                  value={confirmPassword}\n                  label=\"Confirm password\"\n                  onChange={evt => setConfirmPassword(evt.target.value)}\n                  error={confirmPassword !== password}\n                  helperText={\n                    confirmPassword !== password && \"Not matching passwords\"\n                  }\n                  type=\"password\"\n              />\n            </>\n        )}\n        <MultiSelectEditor<UserRole>\n            className={classes.formControl}\n            label=\"Roles\"\n            options={Object.values(UserRole)}\n            optionId={o => o.toString()}\n            optionLabel={o => o.toString()}\n            value={userRoles}\n            onSelectOption={setUserRoles}\n            multiSelect\n        />\n      </div>\n    </DialogContent>\n    <DialogActions>\n      <Button variant=\"text\" color=\"primary\" onClick={onClose}>\n        Close\n      </Button>\n      <Button variant=\"contained\" color=\"primary\" onClick={updateUser}>\n        Confirm\n      </Button>\n    </DialogActions>\n  </Dialog>;\n}\n","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/ProjectEditor.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/RoadMapItem.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/RoadMapComponent.tsx",["305","306","307"],"import {Button} from \"@material-ui/core\";\nimport React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport ApiContext from \"../../ApiContext\";\nimport {RouteComponentProps} from \"@reach/router\";\nimport {JSONComponent} from \"../../widgets/JSONComponent\";\nimport cytoscape, {NodeDefinition} from \"cytoscape\";\n// import RoadMapMenu from \"./roadmap/RoadMapMenu\";\n// import RelevantPointEditorDialog from \"./roadmap/RelevantPointEditorDialog\";\n// import LaneEditorDialog from \"./roadmap/LaneEditorDialog\";\nimport {decimalProperty} from \"./roadmap/properties\";\nimport {DecimalProperty, Lane, RelevantPoint, RoadMap} from \"../../api/generated/projects\";\nimport RoadMapMenu from \"./roadmap/RoadMapMenu\";\nimport {roadMapLanes, roadMapPoints} from \"./roadmap/roadmap-utils\";\nimport RelevantPointEditorDialog from \"./roadmap/RelevantPointEditorDialog\";\nimport LaneEditorDialog from \"./roadmap/LaneEditorDialog\";\nimport AvailableAnalysisDialog from \"./roadmap/analysis/AvailableAnalysisDialog\";\nimport {AnalysisType} from \"../../api/generated/analysis\";\n\ninterface RoadMapComponentProps extends RouteComponentProps {\n  projectId: string;\n  roadMap: RoadMap;\n  refresh: () => void;\n}\n\nexport default function RoadMapComponent(\n    {\n      projectId,\n      roadMap,\n      refresh,\n      navigate\n    }: RoadMapComponentProps\n) {\n\n  const {projectsApi} = useContext(ApiContext);\n\n  const editMap = useCallback(() => {\n    if (projectId && roadMap.uuid) {\n      return projectsApi.updateMap(projectId, roadMap.uuid, {\n        map: roadMap\n      }).then(() => {\n        refresh();\n      });\n    }\n  }, [roadMap, projectId, projectsApi, refresh]);\n\n  function addNode(node: RelevantPoint) {\n    roadMap.points?.push(node);\n    editMap()?.then(() => setShowMenu(false));\n  }\n\n  function updateNode(node: RelevantPoint) {\n    const index = roadMap.points?.findIndex(n => n.id === node.id);\n    if (index !== undefined && index >= 0 && roadMap.points) {\n      roadMap.points[index] = node;\n      editMap()?.then(() => setCurrentNode(null));\n    }\n  }\n\n  function deleteCurrentNode() {\n    const index = roadMap.points?.findIndex(n => n.id === currentNode?.id);\n    if (index !== undefined && index >= 0) {\n      roadMap.points?.splice(index, 1);\n      editMap()?.then(() => setCurrentNode(null));\n    }\n  }\n\n  function addLane(lane: RelevantPoint) {\n    roadMap.lanes?.push(lane);\n    editMap()?.then(() => setShowMenu(false));\n  }\n\n  function updateLane(lane: RelevantPoint) {\n    const index = roadMap.lanes?.findIndex(l => l.id === lane.id);\n    if (index !== undefined && index >= 0 && roadMap.lanes) {\n      roadMap.lanes[index] = lane;\n      editMap()?.then(() => setCurrentLane(null));\n    }\n  }\n\n  function deleteCurrentLane() {\n    const index = roadMap.lanes?.findIndex(l => l.id === currentLane?.id);\n    if (index !== undefined && index >= 0) {\n      roadMap.lanes?.splice(index, 1);\n      editMap()?.then(() => setCurrentLane(null));\n    }\n  }\n\n  const [currentNode, setCurrentNode] = useState<RelevantPoint | null>(null);\n  const [currentLane, setCurrentLane] = useState<Lane | null>(null);\n\n  const [showMenu, setShowMenu] = useState(false);\n  const [showEditor, setShowEditor] = useState(false);\n  const [container, setContainer] = useState<HTMLElement | null>(null);\n  const [showAnalysisDialog, setShowAnalysisDialog] = useState(false);\n\n  const [chosenAnalysis, setChosenAnalysis] = useState<AnalysisType | null>(null);\n\n  const [eventX, setEventX] = useState<number>(0);\n  const [eventY, setEventY] = useState<number>(0);\n\n  const [network, setNetwork] = useState<cytoscape.Core | null>(null);\n\n  function value(decimalProperty: DecimalProperty, def: number): number {\n    return decimalProperty.value || def;\n  }\n\n  const refreshNetwork = useCallback(() => {\n    if (roadMap && container) {\n      try {\n        const net = cytoscape({\n          container: container,\n          elements: {\n            nodes: roadMapPoints(roadMap).map(rp => ({\n              data: {\n                id: rp.id\n              },\n              position: {\n                x: value(decimalProperty(rp.props || [], 'x'), 0) * container.clientWidth,\n                y: value(decimalProperty(rp.props || [], 'y'), 0) * container.clientHeight\n              }\n            })),\n            edges: roadMapLanes(roadMap).map(lane => ({\n              data: {\n                id: lane.id,\n                source: lane.sourceId || \"\",\n                target: lane.destinationId || \"\"\n              }\n            }))\n          },\n          style: [\n            {\n              selector: 'node',\n              style: {\n                label: 'data(id)'\n              }\n            }, {\n              selector: 'edge',\n              style: {\n                // \"mid-arrow-color\": \"#CCC\",\n                \"mid-target-arrow-shape\": \"triangle\"\n              }\n            }\n          ],\n          layout: {\n            name: 'preset',\n            fit: true\n          }\n        });\n        net.on('tapend', 'node', evt => {\n          const id = evt.target.id();\n          const newPos = evt.target.position();\n          const newX = newPos.x / container.clientWidth;\n          const newY = newPos.y / container.clientHeight;\n          const points = roadMap.points || [];\n          const point = points.find(p => p.id === id);\n          if (point) {\n            const pointProps = point.props || [];\n            const oldX = decimalProperty(pointProps, 'x');\n            const oldY = decimalProperty(pointProps, 'y');\n            if (oldX.value !== newX && oldY.value !== newY) {\n              oldX.value = newX;\n              oldY.value = newY;\n              editMap();\n            }\n          }\n        });\n        net.on('cxttapend ', 'node', evt => {\n          setTimeout(() => {\n            const id = evt.target.id();\n            const points = roadMap?.points || [];\n            const point = points.find(p => p.id === id);\n            if (point) {\n              setCurrentNode(point);\n            }\n          }, 0);\n        });\n        net.on('cxttapend ', 'edge', evt => {\n          setTimeout(() => {\n            const id = evt.target.id();\n            const lanes = roadMap?.lanes || [];\n            const lane = lanes.find(l => l.id === id);\n            if (lane) {\n              setCurrentLane(lane);\n            }\n          }, 0);\n        });\n        net.on('cxttapend', evt => {\n          if (evt.target === net) {\n            const evtPos = evt.position;\n            setEventX(evtPos.x / container.clientWidth);\n            setEventY(evtPos.y / container.clientHeight);\n            setTimeout(() => {\n              setShowMenu(true);\n            }, 0);\n          }\n        });\n        setNetwork(net);\n      } catch (err) {\n        console.log(\"Could not draw network\");\n        console.error(err);\n      }\n    }\n  }, [editMap, container, roadMap]);\n\n  useEffect(() => {\n    refreshNetwork();\n  }, [refreshNetwork]);\n\n  function navigateTo(path: string) {\n    if (navigate) {\n      navigate(path);\n    }\n  }\n\n  return (<>\n        <div className={\"button-row\"}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => setShowAnalysisDialog(true)}>\n            Analyze\n          </Button>\n          <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => navigateTo(\"./analysis\")}>\n            Analysis\n          </Button>\n          <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => {\n                setShowEditor(true);\n                setTimeout(refreshNetwork, 0);\n              }}>\n            Edit\n          </Button>\n          <Button\n              color=\"primary\"\n              onClick={() => {\n                navigateTo(\"..\");\n              }}>\n            Back\n          </Button>\n        </div>\n        <div className={\"flex-row\"}>\n          {roadMap && (\n              <div className={\"flex-grid network-container\"} ref={(element: HTMLDivElement) => {\n                setContainer(element);\n              }}/>\n          )}\n          {showEditor && (\n              <div className={\"flex-grid\"}>\n                <JSONComponent\n                    onClose={() => {\n                      setShowEditor(false);\n                      setTimeout(refreshNetwork, 0);\n                    }}\n                    visible={showEditor}\n                    initialJSON={roadMap || {}}\n                    onChange={editMap}\n                />\n              </div>\n          )}\n          {showMenu && (\n              <RoadMapMenu\n                  roadMap={roadMap}\n                  x={eventX}\n                  y={eventY}\n                  onCreateNode={node => addNode(node)}\n                  onCreateLane={lane => addLane(lane)}\n                  onClose={() => setShowMenu(false)}\n                  visible={showMenu}\n              />\n          )}\n          {showAnalysisDialog && (\n              <AvailableAnalysisDialog\n                  projectId={projectId}\n                  mapId={roadMap?.uuid}\n                  onClose={() => setShowAnalysisDialog(false)}\n                  onChooseAnalysis={setChosenAnalysis}\n                  visible={showAnalysisDialog}\n              />\n          )}\n          {/*{chosenAnalysis && (*/}\n          {/*    <AnalysisDialog*/}\n          {/*        visible={!!chosenAnalysis}*/}\n          {/*        projectId={projectId}*/}\n          {/*        mapId={roadMap?.uuid}*/}\n          {/*        analysis={chosenAnalysis}*/}\n          {/*        onClose={() => setChosenAnalysis(null)}*/}\n          {/*    />*/}\n          {/*)}*/}\n          {currentNode && (\n              <RelevantPointEditorDialog\n                  roadMap={roadMap}\n                  onOk={node => updateNode(node)}\n                  onDelete={() => deleteCurrentNode()}\n                  onCancel={() => setCurrentNode(null)}\n                  element={currentNode}\n              />\n          )}\n          {currentLane && (\n              <LaneEditorDialog\n                  roadMap={roadMap}\n                  onOk={lane => updateLane(lane)}\n                  onDelete={() => deleteCurrentLane()}\n                  onCancel={() => setCurrentLane(null)}\n                  element={currentLane}\n              />\n          )}\n          {/*{configurable && (*/}\n          {/*    <ConfigurableDialog*/}\n          {/*        visible={!!configurable}*/}\n          {/*        onClose={() => setConfigurable(null)}*/}\n          {/*        configurable={configurable}*/}\n          {/*        properties={smartMap.properties[configurable]}*/}\n          {/*        onConfirm={props => {*/}\n          {/*            console.log(props);*/}\n          {/*            smartMap.addProperties(configurable, props);*/}\n          {/*            smartMap.sendUpdates();*/}\n          {/*        }}*/}\n          {/*    />*/}\n          {/*)}*/}\n        </div>\n      </>\n  );\n}\n","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/RoadMapEditor.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/users/base.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/users/common.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/projects/base.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/projects/common.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/widgets/OkCancelDialog.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/LaneEditorDialog.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/inputs/MultiSelectEditor.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/roadmap-utils.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/ConfigurableEditorDialog.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/inputs/SelectEditor.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/ConfigurableEditor.tsx",["308"],"import React, {useState} from \"react\";\nimport {ButtonGroup, IconButton} from \"@material-ui/core\";\nimport {Add, Delete, Search} from \"@material-ui/icons\"\nimport ConfigurationSelectionDialog\n  from \"../../configurations/properties/ConfigurationSelectionDialog\";\nimport Button from \"@material-ui/core/Button\";\nimport PropertyInput from \"../../configurations/properties/inputs/PropertyInput\";\nimport PropertyEditorDialog from \"../../configurations/properties/editors/PropertyEditorDialog\";\nimport {Configurable, ItemConfiguration, Property} from \"../../../api/generated/projects\";\nimport {configurableProps} from \"./roadmap-utils\";\n\nexport interface ConfigurableEditorProps<C extends Configurable> {\n  element: C;\n  onChange: (element: C) => void;\n}\n\nexport default function ConfigurableEditor<C extends Configurable>({\n                                                                     element, onChange\n                                                                   }: ConfigurableEditorProps<C>) {\n\n  // const {configurationsApi} = useContext(ApiContext);\n\n  const [presets, setPresets] = useState<Array<ItemConfiguration>>([]);\n\n  const [showConfigurations, setShowConfigurations] = useState(false);\n  const [creatingProp, setCreatingProp] = useState(false);\n\n  // useEffect(() => {\n  //     if (element?.category) {\n  //         configurationsApi.getConfigurations(element.category)\n  //             .then(response => setPresets(response.data));\n  //     }\n  // }, [configurationsApi, element]);\n\n  let suggestedProps = presets.flatMap(conf => conf.props || []);\n\n  suggestedProps = suggestedProps\n  .filter((prop, i) => suggestedProps.findIndex(p => p?.name === prop?.name) === i);\n\n  function addNewProp(prop: Property) {\n    onChange({\n      ...element,\n      props: configurableProps(element).concat([prop])\n    });\n    setCreatingProp(false);\n  }\n\n  function updateProp(index: number, prop: Property) {\n    const oldProps = configurableProps(element);\n    onChange({\n      ...element,\n      props: oldProps.slice(0, index).concat([prop]).concat(oldProps.slice(index + 1, oldProps.length))\n    });\n  }\n\n  function deleteProp(index: number) {\n    const oldProps = configurableProps(element);\n    onChange({\n      ...element,\n      props: oldProps.slice(0, index).concat(oldProps.slice(index + 1, oldProps.length))\n    });\n  }\n\n  function applyConfiguration(conf: ItemConfiguration | null) {\n    setShowConfigurations(false);\n\n    let newProps = [...configurableProps(element)];\n    const confProps = conf?.props || [];\n    confProps.forEach(prop => {\n      const index = newProps.findIndex(p => p.name === prop.name);\n      if (index >= 0) {\n        newProps = newProps.slice(0, index).concat([prop]).concat(newProps.slice(index + 1, newProps.length));\n      } else {\n        newProps = newProps.concat([prop]);\n      }\n    });\n\n    onChange({\n      ...element,\n      props: newProps\n    });\n  }\n\n  return <div>\n    <div className={\"flex-row justify-space-between\"}>\n      <ButtonGroup>\n        <Button\n            color={\"primary\"}\n            variant={\"outlined\"}\n            onClick={() => setCreatingProp(true)}\n            endIcon={<Add/>}>\n          Add\n        </Button>\n        <Button\n            color={\"primary\"}\n            variant={\"outlined\"}\n            onClick={() => setShowConfigurations(true)}\n            endIcon={<Search/>}>\n          Add from preset\n        </Button>\n      </ButtonGroup>\n    </div>\n    {configurableProps(element).map((prop, index) => (\n        <div key={prop.name || \"\" + index} className={\"flex-row justify-space-between\"}>\n          <PropertyInput property={prop} onChange={prop => updateProp(index, prop)}/>\n          <IconButton color={\"primary\"} onClick={() => deleteProp(index)}>\n            <Delete/>\n          </IconButton>\n        </div>\n    ))}\n    {showConfigurations && (\n        <ConfigurationSelectionDialog\n            configurations={presets}\n            onCancel={() => setShowConfigurations(false)}\n            onOk={conf => applyConfiguration(conf)}\n        />\n    )}\n    {creatingProp && (\n        <PropertyEditorDialog\n            suggestions={suggestedProps || []}\n            onOk={addNewProp}\n            onCancel={() => setCreatingProp(false)}\n            visible={creatingProp}/>\n    )}\n  </div>\n}\n","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/editors/PropertyEditorDialog.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/PropertyInput.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/ConfigurationSelectionDialog.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/PropertyTypes.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/properties-utils.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/DistributionPropertyInput.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/ChoicePropertyInput.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/DecimalPropertyInput.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/IntegerPropertyInput.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/editors/PropertyEditor.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/StringPropertyInput.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/distributions/distribution-utils.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/distributions/ExponentialDistributionInput.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/inputs/distributions/UniformDistributionInput.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/editors/DecimalPropertyEditor.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/editors/StringPropertyEditor.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/editors/IntegerPropertyEditor.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/editors/DistributionPropertyEditor.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/PropertySelectionDialog.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/configurations/properties/editors/ChoicePropertyEditor.tsx",[],["309","310"],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/properties.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/RelevantPointEditorDialog.tsx",["311","312","313","314","315"],"import React, {useState} from \"react\";\nimport {OkCancelDialog} from \"../../../widgets/OkCancelDialog\";\nimport ConfigurableEditor from \"./ConfigurableEditor\";\nimport {ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, IconButton, Typography} from \"@material-ui/core\";\nimport {Delete, ExpandMore, Settings} from \"@material-ui/icons\";\nimport RelevantPointLinksEditor from \"./RelevantPointLinksEditor\";\nimport ConfigurableEditorDialog from \"./ConfigurableEditorDialog\";\nimport {RelevantPoint, RoadMap} from \"../../../api/generated/projects\";\n\nexport interface RelevantPointEditorDialogProps {\n    roadMap: RoadMap;\n    element: RelevantPoint;\n    onOk: (element: RelevantPoint) => void;\n    onDelete: () => void;\n    onCancel: () => void;\n}\n\nexport default function RelevantPointEditorDialog({\n    roadMap,\n    element: initialElement, onOk, onDelete, onCancel\n}: RelevantPointEditorDialogProps) {\n\n    const [editingConfiguration, setEditingConfiguration] = useState(false);\n\n    const [element, setElement] = useState<RelevantPoint>(initialElement);\n\n    return <OkCancelDialog onOk={() => onOk(element)} onCancel={onCancel} visible>\n        <div className={\"flex-row align-center\"}>\n            <Typography variant={\"h5\"}>Node {element.id}</Typography>\n            <IconButton color={\"primary\"} onClick={() => setEditingConfiguration(true)}>\n                <Settings/>\n            </IconButton>\n            <IconButton color={\"primary\"} onClick={() => onDelete()}>\n                <Delete/>\n            </IconButton>\n        </div>\n        <RelevantPointLinksEditor\n            roadMap={roadMap}\n            element={element}\n            onChange={e => setElement(e)}/>\n        <ConfigurableEditorDialog\n            visible={editingConfiguration}\n            element={element}\n            onOk={(result) => {\n                setElement(result);\n                setEditingConfiguration(false)\n            }}\n            onCancel={() => setEditingConfiguration(false)}/>\n    </OkCancelDialog>\n}\n","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/RoadMapMenu.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/widgets/JSONComponent.tsx",["316","317","318","319"],"import {Button, Dialog, DialogActions, DialogContent} from \"@material-ui/core\";\nimport JSONEditor, {JSONEditorOptions} from 'jsoneditor';\nimport React, {FunctionComponent, useCallback, useEffect, useState} from \"react\";\nimport Alert from \"./Alert\";\n\ntype JSONComponentProps = {\n  initialJSON: any;\n  onChange: (json: any) => void;\n  onClose: () => void;\n  visible: boolean;\n}\n\nexport const JSONComponent: FunctionComponent<JSONComponentProps> = ({\n                                                                       initialJSON,\n                                                                       onChange,\n                                                                       onClose,\n                                                                       visible\n                                                                     }) => {\n  const [options, setOptions] = useState<JSONEditorOptions>({\n    mode: \"code\",\n  });\n\n  const [error, setError] = useState(\"\");\n\n  const [editor, setEditor] = useState<JSONEditor>();\n\n  const containerRef = useCallback(node => {\n    if (node !== null) {\n      setEditor(new JSONEditor(node, options));\n    }\n  }, [options]);\n\n  useEffect(() => {\n    if (editor) {\n      editor.set(initialJSON);\n    }\n  }, [editor, initialJSON]);\n\n  return (<>\n        <div className={\"jsoneditor-container\"} ref={containerRef}>\n        </div>\n        {editor && (<Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              try {\n                onChange(editor.get());\n              } catch (err) {\n                setError(\"Map not valid\");\n              }\n            }}>\n          Save\n        </Button>)}\n        <Button onClick={onClose}>Close</Button>\n        <Alert onClose={() => setError(\"\")} visible={!!error}>\n          <p>{error}</p>\n        </Alert>\n      </>\n  );\n}\n;\n","/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/RelevantPointLinksEditor.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/NewLaneDialog.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/NewNodeDialog.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/CrossingLinkEditor.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/analysis/index.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/analysis/configuration.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/analysis/api.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/analysis/base.ts",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/pages/projects/roadmap/analysis/AvailableAnalysisDialog.tsx",[],"/home/naigo/git/tramways-microservices/ui/src/main/js/tramways-ui/src/api/generated/analysis/common.ts",[],{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","replacedBy":"323"},{"ruleId":"324","severity":1,"message":"325","line":1,"column":35,"nodeType":"326","messageId":"327","endLine":1,"endColumn":45},{"ruleId":"324","severity":1,"message":"328","line":2,"column":9,"nodeType":"326","messageId":"327","endLine":2,"endColumn":26},{"ruleId":"324","severity":1,"message":"329","line":14,"column":10,"nodeType":"326","messageId":"327","endLine":14,"endColumn":21},{"ruleId":"324","severity":1,"message":"329","line":24,"column":10,"nodeType":"326","messageId":"327","endLine":24,"endColumn":21},{"ruleId":"324","severity":1,"message":"330","line":6,"column":20,"nodeType":"326","messageId":"327","endLine":6,"endColumn":34},{"ruleId":"324","severity":1,"message":"331","line":96,"column":10,"nodeType":"326","messageId":"327","endLine":96,"endColumn":24},{"ruleId":"324","severity":1,"message":"332","line":101,"column":10,"nodeType":"326","messageId":"327","endLine":101,"endColumn":17},{"ruleId":"324","severity":1,"message":"333","line":23,"column":19,"nodeType":"326","messageId":"327","endLine":23,"endColumn":29},{"ruleId":"320","replacedBy":"334"},{"ruleId":"322","replacedBy":"335"},{"ruleId":"324","severity":1,"message":"336","line":3,"column":8,"nodeType":"326","messageId":"327","endLine":3,"endColumn":26},{"ruleId":"324","severity":1,"message":"337","line":4,"column":9,"nodeType":"326","messageId":"327","endLine":4,"endColumn":23},{"ruleId":"324","severity":1,"message":"338","line":4,"column":25,"nodeType":"326","messageId":"327","endLine":4,"endColumn":46},{"ruleId":"324","severity":1,"message":"339","line":4,"column":48,"nodeType":"326","messageId":"327","endLine":4,"endColumn":69},{"ruleId":"324","severity":1,"message":"340","line":5,"column":17,"nodeType":"326","messageId":"327","endLine":5,"endColumn":27},{"ruleId":"324","severity":1,"message":"341","line":1,"column":17,"nodeType":"326","messageId":"327","endLine":1,"endColumn":23},{"ruleId":"324","severity":1,"message":"342","line":1,"column":25,"nodeType":"326","messageId":"327","endLine":1,"endColumn":38},{"ruleId":"324","severity":1,"message":"343","line":1,"column":40,"nodeType":"326","messageId":"327","endLine":1,"endColumn":53},{"ruleId":"324","severity":1,"message":"344","line":19,"column":19,"nodeType":"326","messageId":"327","endLine":19,"endColumn":29},"no-native-reassign",["345"],"no-negated-in-lhs",["346"],"@typescript-eslint/no-unused-vars","'StyleRules' is defined but never used.","Identifier","unusedVar","'BaseCSSProperties' is defined but never used.","'notifyError' is assigned a value but never used.","'NodeDefinition' is defined but never used.","'chosenAnalysis' is assigned a value but never used.","'network' is assigned a value but never used.","'setPresets' is assigned a value but never used.",["345"],["346"],"'ConfigurableEditor' is defined but never used.","'ExpansionPanel' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","'ExpansionPanelSummary' is defined but never used.","'ExpandMore' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'setOptions' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]