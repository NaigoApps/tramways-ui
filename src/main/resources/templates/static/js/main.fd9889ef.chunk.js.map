{"version":3,"sources":["AppContext.ts","utils/useStyles.ts","pages/Page.tsx","ApiContext.ts","pages/LoginPage.tsx","inputs/MultiSelectEditor.tsx","pages/users/UserEditor.tsx","pages/users/UsersPage.tsx","SessionContext.ts","widgets/Alert.tsx","pages/ProfilePage.tsx","widgets/OkCancelDialog.tsx","pages/projects/ProjectEditor.tsx","pages/projects/ProjectsPage.tsx","pages/projects/RoadMapItem.tsx","pages/projects/roadmap/RoadMapEditor.tsx","pages/projects/ProjectPage.tsx","widgets/JSONComponent.tsx","pages/projects/roadmap/properties.ts","pages/projects/roadmap/NewNodeDialog.tsx","inputs/SelectEditor.tsx","pages/projects/roadmap/roadmap-utils.ts","pages/projects/roadmap/NewLaneDialog.tsx","pages/configurations/properties/inputs/PropertyTypes.ts","pages/configurations/properties/properties-utils.ts","pages/projects/roadmap/RoadMapMenu.tsx","pages/configurations/properties/ConfigurationSelectionDialog.tsx","pages/configurations/properties/inputs/IntegerPropertyInput.tsx","pages/configurations/properties/inputs/StringPropertyInput.tsx","pages/configurations/properties/inputs/DecimalPropertyInput.tsx","pages/configurations/properties/inputs/ChoicePropertyInput.tsx","pages/configurations/properties/inputs/distributions/UniformDistributionInput.tsx","pages/configurations/properties/inputs/distributions/ExponentialDistributionInput.tsx","pages/configurations/properties/inputs/DistributionPropertyInput.tsx","pages/configurations/properties/inputs/PropertyInput.tsx","pages/configurations/properties/PropertySelectionDialog.tsx","pages/configurations/properties/editors/PropertyEditor.tsx","pages/configurations/properties/inputs/distributions/distribution-utils.ts","pages/configurations/properties/editors/PropertyEditorDialog.tsx","pages/projects/roadmap/ConfigurableEditor.tsx","pages/projects/roadmap/ConfigurableEditorDialog.tsx","pages/projects/roadmap/CrossingLinkEditor.tsx","pages/projects/roadmap/RelevantPointLinksEditor.tsx","pages/projects/roadmap/RelevantPointEditorDialog.tsx","pages/projects/roadmap/LaneEditorDialog.tsx","pages/configurations/properties/editors/IntegerPropertyEditor.tsx","pages/configurations/properties/editors/DecimalPropertyEditor.tsx","pages/configurations/properties/editors/StringPropertyEditor.tsx","pages/configurations/properties/editors/ChoicePropertyEditor.tsx","pages/configurations/properties/editors/DistributionPropertyEditor.tsx","pages/projects/roadmap/analysis/AvailableAnalysisDialog.tsx","pages/projects/RoadMapComponent.tsx","pages/projects/RoadMapPage.tsx","Root.tsx","utils/errors-interceptor.ts","hooks/configureUsersApi.js","hooks/configureProjectsApi.js","hooks/configureAnalysisApi.js","App.tsx","index.tsx"],"names":["AppContext","React","createContext","relative","useStyles","makeStyles","palette","spacing","createStyles","appBarTitle","flexGrow","fab","position","top","right","container","marginTop","centerContent","width","display","alignItems","flexDirection","card","padding","formControl","margin","minWidth","Page","title","children","classes","setAppBarTitle","useContext","useEffect","Container","className","Children","toArray","ApiContext","LoginPage","navigate","usersApi","updateToken","useState","username","setUser","password","setPassword","a","login","then","response","data","value","TextField","variant","label","onChange","evt","target","type","FormControl","Button","startIcon","color","onClick","MultiSelectEditor","optionId","o","optionLabel","options","multiSelect","onSelectOption","inputLabel","useRef","labelWidth","setLabelWidth","current","offsetWidth","InputLabel","ref","Select","MenuProps","anchorOrigin","horizontal","vertical","transformOrigin","getContentAnchorEl","multiple","map","option","MenuItem","UserEditor","user","onClose","onConfirm","setUsername","confirmPassword","setConfirmPassword","roles","userRoles","setUserRoles","Dialog","maxWidth","fullWidth","open","DialogTitle","uuid","DialogContent","error","helperText","Object","values","UserRole","toString","DialogActions","editRoles","createUser","UsersPage","props","users","setUsers","loadUsers","useCallback","getUsers","selectedUser","setSelectedUser","Fab","aria-label","Client","Grid","item","xs","Card","CardContent","Typography","join","CardActions","id","deleteUser","SessionContext","Alert","visible","buttonColor","ProfilePage","notifyMessage","oldPassword","setOldPassword","newPassword","setNewPassword","editPassword","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","OkCancelDialog","valid","size","onCancel","onOk","cancelText","okText","dividers","disabled","ProjectEditor","project","onAbort","projectsApi","name","newName","setNewName","updateProject","createProject","ProjectsPage","projects","setProjects","loadProjects","getProjects","selectedProject","setSelectedProject","renderRoadMaps","roadMaps","openProject","editProject","deleteProject","RoadMapItem","refresh","cloneMapNameInput","isShowCloneDialog","setShowCloneDialog","cloneMapName","setCloneMapName","hideCloneDialog","deleteMap","createMap","focus","RoadMapEditor","projectId","updateMap","points","lanes","ProjectPage","setProject","selectedMap","setSelectedMap","loadProject","getProject","roadmaps","forEach","roadMap","push","sm","md","lg","xl","JSONComponent","initialJSON","mode","setError","editor","setEditor","containerRef","node","JSONEditor","set","get","err","decimalProperty","find","p","NewNodeDialog","nodeId","setNodeId","category","configurableType","links","SelectEditor","formClass","roadMapPoints","roadMapLanes","configurableProps","c","NewLaneDialog","laneId","setLaneId","source","setSource","destination","setDestination","sourceId","destinationId","point","v","PropertyTypes","INTEGER","STRING","DECIMAL","CHOICE","DISTRIBUTION","newStringProperty","propertyType","createDecimal","RoadMapMenu","onCreateNode","onCreateLane","x","y","showNewNodeDialog","setShowNewNodeDialog","showNewLaneDialog","setShowNewLaneDialog","List","ListItem","button","ListItemAvatar","Avatar","ListItemText","primary","lane","ConfigurationSelectionDialog","configurations","selectedConfiguration","setSelectedConfiguration","conf","RadioGroup","index","FormControlLabel","control","Radio","IntegerPropertyInput","property","description","parseInt","StringPropertyInput","DecimalPropertyInput","parseFloat","ChoicePropertyInput","choices","prop","findValue","UniformDistributionInput","distribution","left","ExponentialDistributionInput","lambda","DistributionPropertyInput","componentMap","Map","Component","distributionType","d","PropertyInput","PropertySelectionDialog","properties","selectedProperty","setSelectedProperty","editorsMap","PropertyEditor","suggestions","editValue","setEditValue","showSuggestions","setShowSuggestions","changePropertyType","undefined","SpecificEditor","InputProps","endAdornment","InputAdornment","IconButton","Search","PropertyEditorDialog","setValue","ConfigurableEditor","element","presets","showConfigurations","setShowConfigurations","creatingProp","setCreatingProp","suggestedProps","flatMap","updateProp","oldProps","slice","concat","length","filter","i","findIndex","ButtonGroup","endIcon","deleteProp","Delete","newProps","applyConfiguration","ConfigurableEditorDialog","currentElement","setCurrentElement","e","CrossingLinkEditor","relevantPoint","crossingLink","onDelete","editingLink","setEditingLink","sources","destinations","link","RelevantPointLinksEditor","createLink","newLink","setNewLink","updateLink","deleteLink","RelevantPointEditorDialog","initialElement","editingConfiguration","setEditingConfiguration","setElement","result","LaneEditorDialog","newItem","setNewItem","updateItem","choice","deleteItem","AvailableAnalysisDialog","onChooseAnalysis","mapId","analysisApi","availableAnalysis","setAvailableAnalysis","getAvailableAnalysis","RoadMapComponent","editMap","currentNode","setCurrentNode","currentLane","setCurrentLane","showMenu","setShowMenu","showEditor","setShowEditor","setContainer","showAnalysisDialog","setShowAnalysisDialog","setChosenAnalysis","eventX","setEventX","eventY","setEventY","setNetwork","def","refreshNetwork","net","cytoscape","elements","nodes","rp","clientWidth","clientHeight","edges","style","selector","layout","fit","on","newPos","newX","newY","pointProps","oldX","oldY","setTimeout","l","evtPos","console","log","navigateTo","path","addNode","addLane","n","updateNode","splice","deleteCurrentNode","updateLane","deleteCurrentLane","RoadMapPage","setMap","loadMap","getMap","navContent","loggedUser","items","r","ListItemIcon","Expert","Admin","Root","clearError","message","clearMessage","loading","showDrawer","setShowDrawer","AppBar","Toolbar","edge","AccountCircle","Drawer","onKeyDown","basepath","default","registerInterceptor","setWarning","Axios","interceptors","request","use","Promise","reject","next","resolve","isAxiosError","status","configureUsersApi","config","UsersApi","Configuration","configureProjectsApi","ProjectsApi","configureAnalysisApi","AnalysisApi","App","setMessage","setLoading","notifyError","msg","stopLoading","nLoading","startLoading","Cookies","token","setToken","setLoggedUser","registerInterceptors","accessToken","basePath","setUsersApi","setProjectsApi","setAnalysisApi","loaded","setLoaded","refreshLoggedUser","logged","catch","newToken","newConfig","Provider","refreshUser","require","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fd9889ef.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ntype AppContextType = {\r\n    error: string;\r\n    notifyError: (err: string) => void;\r\n    clearError: () => void;\r\n    message: string;\r\n    notifyMessage: (msg: string) => void;\r\n    clearMessage: () => void;\r\n    loading: number;\r\n    startLoading: () => void;\r\n    stopLoading: () => void;\r\n    appBarTitle: string;\r\n    setAppBarTitle: (title: string) => void;\r\n}\r\n\r\nconst AppContext = React.createContext({} as AppContextType);\r\n\r\nexport default AppContext;\r\n","import {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\n\r\n/*\r\n * Trick\r\n */\r\nconst absolute: \"absolute\" = \"absolute\";\r\nconst relative: \"relative\" = \"relative\";\r\n\r\n\r\nconst useStyles = makeStyles(({palette, spacing}: Theme) => createStyles({\r\n    appBarTitle: {\r\n        flexGrow: 1\r\n    },\r\n    fab: {\r\n        position: absolute,\r\n        top: spacing(2),\r\n        right: spacing(2)\r\n    },\r\n    relative: {\r\n        position: relative\r\n    },\r\n    container: {\r\n        position: relative,\r\n        marginTop: spacing(2)\r\n    },\r\n    centerContent: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    card: {\r\n        padding: spacing(1)\r\n    },\r\n    formControl: {\r\n        margin: spacing(1),\r\n        minWidth: 120\r\n    }\r\n}));\r\n\r\nexport default useStyles;\r\n","import Container from \"@material-ui/core/Container\";\r\nimport React, {FunctionComponent, useContext, useEffect} from \"react\";\r\nimport AppContext from \"../AppContext\";\r\nimport useStyles from \"../utils/useStyles\";\r\n\r\ntype PageProps = {\r\n    title: string;\r\n}\r\n\r\nconst Page: FunctionComponent<PageProps> = ({title, children}) => {\r\n    const classes = useStyles();\r\n\r\n    const {setAppBarTitle} = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        setAppBarTitle(title);\r\n    }, [setAppBarTitle, title]);\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            {React.Children.toArray(children)}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport {ProjectsApi} from \"@tramways/projects-service-api\";\r\nimport {UsersApi} from \"@tramways/users-service-api\";\r\nimport {AnalysisApi} from \"@tramways/analysis-service-api\";\r\n\r\ntype ApiContextType = {\r\n    usersApi: UsersApi;\r\n    projectsApi: ProjectsApi;\r\n    // configurationsApi: ConfigurationsApi;\r\n    analysisApi: AnalysisApi;\r\n\r\n    updateToken: (token: string | undefined) => void\r\n}\r\n\r\nconst ApiContext = React.createContext({} as ApiContextType);\r\n\r\nexport default ApiContext;\r\n","import {Button, FormControl, TextField} from \"@material-ui/core\";\r\nimport React, {useContext, useState} from \"react\";\r\nimport Page from \"./Page\";\r\nimport useStyles from \"../utils/useStyles\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport {RouteComponentProps} from \"@reach/router\";\r\nimport ApiContext from \"../ApiContext\";\r\n\r\nexport default function LoginPage({navigate}: RouteComponentProps) {\r\n  const {usersApi, updateToken} = useContext(ApiContext);\r\n  const classes = useStyles();\r\n  const [username, setUser] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  async function login() {\r\n    usersApi.login({\r\n      username, password\r\n    }).then(response => {\r\n      updateToken(response.data.value);\r\n      if (navigate) {\r\n        navigate(\"/tramways/profile\");\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n      <Page title=\"Login\">\r\n        <div className={classes.centerContent}>\r\n          <div>\r\n            <TextField\r\n                className={classes.formControl}\r\n                variant=\"outlined\"\r\n                label=\"Username\"\r\n                value={username}\r\n                onChange={evt => setUser(evt.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                className={classes.formControl}\r\n                value={password}\r\n                label=\"Password\"\r\n                onChange={evt => setPassword(evt.target.value)}\r\n                type=\"password\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <FormControl className={classes.formControl}>\r\n              <Button\r\n                  startIcon={<CheckIcon/>}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={login}>\r\n                Submit\r\n              </Button>\r\n            </FormControl>\r\n          </div>\r\n        </div>\r\n      </Page>\r\n  );\r\n}\r\n","import {FormControl, FormControlProps, InputLabel, MenuItem, Select} from \"@material-ui/core\";\r\nimport React, {useEffect, useRef} from \"react\";\r\n\r\ntype MultiSelectEditorProps<T> = {\r\n    optionId: (option: T) => string;\r\n    optionLabel: (option: T) => string;\r\n    options: T[];\r\n    value: T[];\r\n    label: string;\r\n    multiSelect: boolean;\r\n    onSelectOption: (option: T[]) => void;\r\n} & FormControlProps;\r\n\r\nexport default function MultiSelectEditor<T>({\r\n    optionId = o => o as unknown as string,\r\n    optionLabel = o => o as unknown as string,\r\n    options,\r\n    value,\r\n    className,\r\n    label,\r\n    multiSelect,\r\n    onSelectOption,\r\n}: MultiSelectEditorProps<T>) {\r\n\r\n    const inputLabel = useRef<HTMLLabelElement>(null);\r\n    const [labelWidth, setLabelWidth] = React.useState(0);\r\n    useEffect(() => {\r\n        setLabelWidth(inputLabel.current ? (inputLabel.current as HTMLLabelElement).offsetWidth : 0);\r\n    }, []);\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" className={className}>\r\n            <InputLabel ref={inputLabel}>{label}</InputLabel>\r\n            <Select\r\n                MenuProps={{\r\n                    anchorOrigin: {\r\n                        horizontal: \"left\",\r\n                        vertical: \"bottom\"\r\n                    },\r\n                    transformOrigin: {\r\n                        horizontal: \"left\",\r\n                        vertical: \"top\"\r\n                    },\r\n                    getContentAnchorEl: null\r\n                }}\r\n                multiple={multiSelect}\r\n                onChange={evt => onSelectOption(evt.target.value as T[])}\r\n                value={value}\r\n                labelWidth={labelWidth}>\r\n                {options.map(option => (\r\n                    <MenuItem key={optionId(option)} value={option as any}>\r\n                        {optionLabel(option)}\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n};\r\n","import {Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField} from \"@material-ui/core\";\r\nimport React, {useContext, useState} from \"react\";\r\nimport ApiContext from \"../../ApiContext\";\r\nimport MultiSelectEditor from \"../../inputs/MultiSelectEditor\";\r\nimport useStyles from \"../../utils/useStyles\";\r\nimport {User, UserRole} from \"@tramways/users-service-api\";\r\n\r\ntype UserEditorProps = {\r\n  user: User;\r\n  onClose: () => void;\r\n  onConfirm: () => void;\r\n};\r\n\r\nexport default function UserEditor({user, onClose, onConfirm}: UserEditorProps) {\r\n  const {usersApi} = useContext(ApiContext);\r\n\r\n  const [username, setUsername] = useState(user.username);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [userRoles, setUserRoles] = useState(user.roles || []);\r\n\r\n  const classes = useStyles();\r\n\r\n  function updateUser() {\r\n    if (user.uuid) {\r\n      usersApi.editRoles(user.uuid, userRoles)\r\n      .then(onConfirm);\r\n    } else if (password === confirmPassword) {\r\n      usersApi.createUser({\r\n        username: username,\r\n        password: password,\r\n        roles: userRoles\r\n      }).then(onConfirm);\r\n    }\r\n  }\r\n\r\n  return <Dialog\r\n      maxWidth={\"sm\"}\r\n      fullWidth={true}\r\n      onClose={onClose}\r\n      open={!!user}>\r\n    <DialogTitle>{user?.uuid ? `Edit user ${user?.username}` : \"Create user\"}</DialogTitle>\r\n    <DialogContent>\r\n      <div className={\"flex-column\"}>\r\n        {!user?.uuid && (\r\n            <>\r\n              <TextField\r\n                  className={classes.formControl}\r\n                  variant=\"outlined\"\r\n                  label=\"Username\"\r\n                  value={username}\r\n                  onChange={evt => setUsername(evt.target.value)}\r\n              />\r\n              <TextField\r\n                  className={classes.formControl}\r\n                  variant=\"outlined\"\r\n                  value={password}\r\n                  label=\"Password\"\r\n                  onChange={evt => setPassword(evt.target.value)}\r\n                  type=\"password\"\r\n              />\r\n              <TextField\r\n                  className={classes.formControl}\r\n                  variant=\"outlined\"\r\n                  value={confirmPassword}\r\n                  label=\"Confirm password\"\r\n                  onChange={evt => setConfirmPassword(evt.target.value)}\r\n                  error={confirmPassword !== password}\r\n                  helperText={\r\n                    confirmPassword !== password && \"Not matching passwords\"\r\n                  }\r\n                  type=\"password\"\r\n              />\r\n            </>\r\n        )}\r\n        <MultiSelectEditor<UserRole>\r\n            className={classes.formControl}\r\n            label=\"Roles\"\r\n            options={Object.values(UserRole)}\r\n            optionId={o => o.toString()}\r\n            optionLabel={o => o.toString()}\r\n            value={userRoles}\r\n            onSelectOption={setUserRoles}\r\n            multiSelect\r\n        />\r\n      </div>\r\n    </DialogContent>\r\n    <DialogActions>\r\n      <Button variant=\"text\" color=\"primary\" onClick={onClose}>\r\n        Close\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={updateUser}>\r\n        Confirm\r\n      </Button>\r\n    </DialogActions>\r\n  </Dialog>;\r\n}\r\n","import {Button, Card, CardActions, CardContent, Fab, Grid, Typography} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport React, {useCallback, useContext, useEffect, useState} from \"react\";\r\nimport useStyles from \"../../utils/useStyles\";\r\nimport Page from \"../Page\";\r\nimport ApiContext from \"../../ApiContext\";\r\nimport UserEditor from \"./UserEditor\";\r\nimport {RouteComponentProps} from \"@reach/router\";\r\nimport {User, UserRole} from \"@tramways/users-service-api\";\r\n\r\nexport default function UsersPage(props: RouteComponentProps) {\r\n    const {usersApi} = useContext(ApiContext);\r\n    const classes = useStyles();\r\n\r\n    const [users, setUsers] = useState<User[]>([]);\r\n\r\n    const loadUsers = useCallback(() => {\r\n        usersApi.getUsers().then(response => setUsers(response.data));\r\n    }, [usersApi]);\r\n\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, [loadUsers]);\r\n\r\n    const [selectedUser, setSelectedUser] = useState<User | null>(null);\r\n\r\n    function createUser() {\r\n        setSelectedUser({\r\n            username: \"\",\r\n            roles: [UserRole.Client]\r\n        });\r\n    }\r\n\r\n    function deleteUser(id: string | undefined) {\r\n        if (id) {\r\n            usersApi.deleteUser(id)\r\n                .then(() => loadUsers());\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Page title=\"Users\">\r\n            <Fab\r\n                color=\"primary\"\r\n                aria-label=\"add\"\r\n                className={classes.fab}\r\n                onClick={createUser}>\r\n                <AddIcon/>\r\n            </Fab>\r\n            <Grid container spacing={1}>\r\n                {users && users.map(user => (\r\n                    <Grid\r\n                        key={user.uuid}\r\n                        item xs={4}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\">{user.username}</Typography>\r\n                                <Typography variant=\"h6\">\r\n                                    {`Roles: ${user && user.roles && user.roles.join(\", \")}`}\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => setSelectedUser(user)}>\r\n                                    Edit\r\n                                </Button>\r\n                                <Button color=\"primary\" onClick={() => deleteUser(user.uuid)}>\r\n                                    Delete\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            {selectedUser && <UserEditor\r\n                user={selectedUser}\r\n                onClose={() => setSelectedUser(null)}\r\n                onConfirm={() => {\r\n                    setSelectedUser(null);\r\n                    loadUsers();\r\n                }}/>\r\n            }\r\n        </Page>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {User} from \"@tramways/users-service-api\";\r\n\r\ntype SessionContextType = {\r\n    user: User | null,\r\n    refreshUser: () => void\r\n}\r\n\r\nconst SessionContext = React.createContext({} as SessionContextType);\r\n\r\nexport default SessionContext;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  PropTypes\r\n} from \"@material-ui/core\";\r\nimport React, {ReactNode} from \"react\";\r\n\r\ntype AlertProps = {\r\n  title?: string;\r\n  visible: boolean;\r\n  onClose?: () => void;\r\n  children: ReactNode,\r\n  buttonColor?: PropTypes.Color,\r\n}\r\n\r\nexport default function Alert(\r\n    {\r\n      title,\r\n      visible,\r\n      onClose,\r\n      children,\r\n      buttonColor = \"secondary\"\r\n    }: AlertProps\r\n) {\r\n  return (\r\n      <Dialog open={visible} onClose={onClose}>\r\n        {title && <DialogTitle>{title}</DialogTitle>}\r\n        <DialogContent>{children}</DialogContent>\r\n        {onClose && (<DialogActions>\r\n          <Button variant=\"contained\" color={buttonColor} onClick={onClose}>\r\n            Chiudi\r\n          </Button>\r\n        </DialogActions>)\r\n        }\r\n      </Dialog>\r\n  );\r\n}\r\n","import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  TextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport {ExpandMore} from \"@material-ui/icons\";\r\nimport React, {useContext, useState} from \"react\";\r\nimport AppContext from \"../AppContext\";\r\nimport {RouteComponentProps} from \"@reach/router\";\r\nimport SessionContext from \"../SessionContext\";\r\nimport ApiContext from \"../ApiContext\";\r\nimport Page from \"./Page\";\r\n\r\nexport default function ProfilePage({navigate}: RouteComponentProps) {\r\n\r\n  const {usersApi} = useContext(ApiContext);\r\n  const {notifyMessage} = useContext(AppContext);\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const {user} = useContext(SessionContext);\r\n\r\n  async function changePassword() {\r\n    if (user && newPassword === confirmPassword) {\r\n      usersApi.editPassword(user.uuid || '', {oldPassword: oldPassword, newPassword: newPassword})\r\n      .then(() => notifyMessage(\"Password changed successfully\"));\r\n    }\r\n  }\r\n\r\n  if (!user) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n      <Page title={user.username + \" profile\"}>\r\n        <Typography variant={\"h2\"}>Your profile</Typography>\r\n        <Accordion>\r\n          <AccordionSummary\r\n              expandIcon={<ExpandMore/>}>\r\n            <Typography variant={\"h6\"}>Password change</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <div className={\"flex-column\"}>\r\n              <div className={\"spaced-top-10\"}>\r\n                <TextField\r\n                    type={\"password\"}\r\n                    label=\"Old password\"\r\n                    variant={\"outlined\"}\r\n                    onChange={evt => setOldPassword(evt.target.value)}\r\n                    value={oldPassword}\r\n                />\r\n              </div>\r\n              <div className={\"spaced-top-10\"}>\r\n                <TextField\r\n                    type={\"password\"}\r\n                    label=\"New password\"\r\n                    variant={\"outlined\"}\r\n                    onChange={evt => setNewPassword(evt.target.value)}\r\n                    value={newPassword}\r\n                />\r\n              </div>\r\n              <div className={\"spaced-top-10\"}>\r\n                <TextField\r\n                    type={\"password\"}\r\n                    label=\"Confirm new password\"\r\n                    variant={\"outlined\"}\r\n                    onChange={evt => setConfirmPassword(evt.target.value)}\r\n                    value={confirmPassword}\r\n                    error={newPassword !== confirmPassword}\r\n                    helperText={newPassword !== confirmPassword && \"Not matching passwords\"}\r\n                />\r\n              </div>\r\n              <div className={\"spaced-top-10\"}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={changePassword}>\r\n                  Change password\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </Page>\r\n  );\r\n}\r\n","import {Button, Dialog, DialogActions, DialogContent, DialogTitle} from \"@material-ui/core\";\r\nimport React, {FunctionComponent} from \"react\";\r\n\r\nexport type OkCancelDialogProps = {\r\n    title?: string;\r\n    valid?: boolean\r\n    size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\r\n    visible: boolean;\r\n    onCancel: () => void;\r\n    onOk: () => void;\r\n    cancelText?: string;\r\n    okText?: string;\r\n}\r\n\r\nexport const OkCancelDialog: FunctionComponent<OkCancelDialogProps> = (\r\n    {\r\n        title,\r\n        valid = true,\r\n        children,\r\n        size,\r\n        visible,\r\n        onCancel,\r\n        onOk,\r\n        cancelText = \"Cancel\",\r\n        okText = \"Ok\"\r\n    }) => {\r\n\r\n    return (\r\n        <Dialog open={visible} onClose={onCancel} maxWidth={size} fullWidth={!!size}>\r\n            {title && <DialogTitle>{title}</DialogTitle>}\r\n            <DialogContent dividers={true}>{children}</DialogContent>\r\n            <DialogActions>\r\n                <Button color=\"primary\" onClick={onCancel}>\r\n                    {cancelText}\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={onOk} disabled={!valid}>\r\n                    {okText}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n","import {TextField} from \"@material-ui/core\";\r\nimport React, {useContext, useState} from \"react\";\r\nimport ApiContext from \"../../ApiContext\";\r\nimport {OkCancelDialog} from \"../../widgets/OkCancelDialog\";\r\nimport {ProjectDescription} from \"@tramways/projects-service-api\";\r\n\r\nexport type ProjectEditorProps = {\r\n  project: ProjectDescription;\r\n  onAbort: () => void;\r\n  onConfirm: () => void;\r\n};\r\n\r\nexport default function ProjectEditor({project, onAbort, onConfirm}: ProjectEditorProps) {\r\n  const {projectsApi} = useContext(ApiContext);\r\n\r\n  const [newName, setNewName] = useState(project.name);\r\n\r\n  function confirm() {\r\n    if (project.uuid) {\r\n      projectsApi.updateProject(project.uuid, {\r\n        name: newName\r\n      }).then(onConfirm);\r\n    } else {\r\n      projectsApi.createProject({\r\n        name: newName\r\n      }).then(onConfirm);\r\n    }\r\n  }\r\n\r\n  return (\r\n      <OkCancelDialog onOk={confirm} onCancel={onAbort} visible>\r\n        <TextField\r\n            variant={\"outlined\"}\r\n            label=\"Project name\"\r\n            onChange={evt => setNewName(evt.target.value)}\r\n            value={newName}\r\n        />\r\n      </OkCancelDialog>\r\n  );\r\n}\r\n","import {Button, Card, CardActions, CardContent, Fab, Grid, Typography} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport React, {useCallback, useContext, useEffect, useState} from \"react\";\r\nimport useStyles from \"../../utils/useStyles\";\r\nimport Page from \"../Page\";\r\nimport {RouteComponentProps} from \"@reach/router\";\r\nimport ApiContext from \"../../ApiContext\";\r\nimport ProjectEditor from \"./ProjectEditor\";\r\nimport {Project, ProjectDescription} from \"@tramways/projects-service-api\";\r\n\r\nexport default function ProjectsPage({navigate}: RouteComponentProps) {\r\n  const classes = useStyles();\r\n\r\n  const {projectsApi} = useContext(ApiContext);\r\n\r\n  const [projects, setProjects] = useState<ProjectDescription[]>([]);\r\n\r\n  const loadProjects = useCallback(() => {\r\n    projectsApi.getProjects().then(response => setProjects(response.data));\r\n  }, [projectsApi]);\r\n\r\n  useEffect(() => {\r\n    loadProjects();\r\n  }, [loadProjects]);\r\n\r\n  const [selectedProject, setSelectedProject] = useState<ProjectDescription | null>(null);\r\n\r\n  function openProject(project: Project) {\r\n    if (navigate && project.uuid) {\r\n      navigate(project.uuid);\r\n    }\r\n  }\r\n\r\n  function editProject(project: Project) {\r\n    setSelectedProject(project);\r\n  }\r\n\r\n  function deleteProject(project: Project) {\r\n    if (project.uuid) {\r\n      projectsApi.deleteProject(project.uuid).then(() => loadProjects());\r\n    }\r\n  }\r\n\r\n  if (!projects) {\r\n    return null;\r\n  }\r\n\r\n  const renderRoadMaps = (project: Project) => {\r\n    if (project.roadMaps) {\r\n      project.roadMaps.map(map => (\r\n          <Typography variant=\"h6\">{map.name}</Typography>\r\n      ));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  return (\r\n      <Page title=\"Projects\">\r\n        <Fab\r\n            className={classes.fab}\r\n            color=\"primary\"\r\n            onClick={() => setSelectedProject({name: \"\"})}>\r\n          <AddIcon/>\r\n        </Fab>\r\n        <Grid container spacing={1}>\r\n          {projects.map(project => (\r\n              <Grid key={project?.uuid} item xs={4}>\r\n                <Card className={classes.card}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h5\">{project.name}</Typography>\r\n                    {renderRoadMaps(project)}\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => openProject(project)}>\r\n                      Open\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={() => editProject(project)}>\r\n                      Edit\r\n                    </Button>\r\n                    <Button onClick={() => deleteProject(project)}>Delete</Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n          ))}\r\n        </Grid>\r\n        {selectedProject && (\r\n            <ProjectEditor\r\n                project={selectedProject}\r\n                onConfirm={() => {\r\n                  setSelectedProject(null);\r\n                  loadProjects();\r\n                }}\r\n                onAbort={() => setSelectedProject(null)}\r\n            />\r\n        )}\r\n      </Page>\r\n  );\r\n}\r\n","import {Button, Card, CardActions, CardContent, TextField, Typography} from \"@material-ui/core\";\r\nimport React, {useContext, useEffect, useRef, useState} from \"react\";\r\nimport useStyles from \"../../utils/useStyles\";\r\nimport {RouteComponentProps} from \"@reach/router\";\r\nimport ApiContext from \"../../ApiContext\";\r\nimport {OkCancelDialog} from \"../../widgets/OkCancelDialog\";\r\nimport {Project, RoadMapDescription} from \"@tramways/projects-service-api\";\r\n\r\ninterface RoadMapItemProps extends RouteComponentProps {\r\n  project: Project;\r\n  map: RoadMapDescription;\r\n  refresh: () => void;\r\n}\r\n\r\nexport default function RoadMapItem({project, map, refresh, navigate}: RoadMapItemProps) {\r\n  const {projectsApi} = useContext(ApiContext);\r\n  const classes = useStyles();\r\n\r\n  const cloneMapNameInput = useRef<HTMLInputElement>(null);\r\n\r\n  function openMap() {\r\n    if (navigate && map.uuid) {\r\n      navigate(map.uuid);\r\n    }\r\n  }\r\n\r\n  const [isShowCloneDialog, setShowCloneDialog] = useState(false);\r\n  const [cloneMapName, setCloneMapName] = useState(\"\");\r\n\r\n  const showCloneDialog = () => {\r\n    if (map && map.name) {\r\n      setShowCloneDialog(true);\r\n      setCloneMapName(map.name);\r\n    }\r\n  };\r\n\r\n  const hideCloneDialog = () => setShowCloneDialog(false);\r\n\r\n  useEffect(() => {\r\n    if (isShowCloneDialog) {\r\n      cloneMapNameInput?.current?.focus();\r\n    }\r\n  }, [isShowCloneDialog]);\r\n\r\n  async function deleteMap() {\r\n    if (project && project.uuid && map && map.uuid) {\r\n      projectsApi.deleteMap(project.uuid, map.uuid).then(() => refresh());\r\n    }\r\n  }\r\n\r\n  async function cloneMap() {\r\n    if (project && project.uuid) {\r\n      projectsApi.createMap(project.uuid, {\r\n        map: {\r\n          ...map,\r\n          name: cloneMapName\r\n        }\r\n      }).then(() => {\r\n        setCloneMapName(\"\");\r\n        hideCloneDialog();\r\n        refresh()\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\">{map.name}</Typography>\r\n          {/* <Typography variant=\"body1\">{`Entrances: ${map.stats.sources}`}</Typography>\r\n        <Typography variant=\"body1\">{`Crossings: ${map.stats.crossings}`}</Typography>\r\n        <Typography variant=\"body1\">{`Exits: ${map.stats.segments}`}</Typography> */}\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => openMap()}>\r\n            Open\r\n          </Button>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={showCloneDialog}>\r\n            Duplicate\r\n          </Button>\r\n          <Button onClick={() => deleteMap()}>Delete</Button>\r\n        </CardActions>\r\n        <OkCancelDialog\r\n            visible={isShowCloneDialog}\r\n            onCancel={hideCloneDialog}\r\n            onOk={cloneMap}>\r\n          <TextField\r\n              variant=\"outlined\"\r\n              ref={cloneMapNameInput}\r\n              label=\"New map name\"\r\n              value={cloneMapName}\r\n              onChange={evt => setCloneMapName(evt.target.value)}\r\n          />\r\n        </OkCancelDialog>\r\n      </Card>\r\n  );\r\n}\r\n","import {TextField} from \"@material-ui/core\";\r\nimport React, {useContext, useState} from \"react\";\r\nimport ApiContext from \"../../../ApiContext\";\r\nimport {OkCancelDialog} from \"../../../widgets/OkCancelDialog\";\r\nimport {RoadMap} from \"@tramways/projects-service-api\";\r\n\r\nexport type RoadMapEditorProps = {\r\n  projectId: string\r\n  map: RoadMap;\r\n  onAbort: () => void;\r\n  onConfirm: () => void;\r\n};\r\n\r\nexport default function RoadMapEditor({projectId, map, onAbort, onConfirm}: RoadMapEditorProps) {\r\n  const {projectsApi} = useContext(ApiContext);\r\n\r\n  const [newName, setNewName] = useState(map.name);\r\n\r\n  function confirm() {\r\n    if (map.uuid) {\r\n      projectsApi.updateMap(projectId, map.uuid, {\r\n        map: {\r\n          ...map,\r\n          name: newName\r\n        }\r\n      }).then(onConfirm);\r\n    } else {\r\n      projectsApi.createMap(projectId, {\r\n        map: {\r\n          name: newName,\r\n          points: [],\r\n          lanes: []\r\n        }\r\n      }).then(onConfirm);\r\n    }\r\n  }\r\n\r\n  return (\r\n      <OkCancelDialog onOk={confirm} onCancel={onAbort} visible>\r\n        <TextField\r\n            variant={\"outlined\"}\r\n            label=\"Map name\"\r\n            onChange={evt => setNewName(evt.target.value)}\r\n            value={newName}\r\n        />\r\n      </OkCancelDialog>\r\n  );\r\n}\r\n","import React, {useCallback, useContext, useEffect, useState} from \"react\";\r\nimport Page from \"../Page\";\r\nimport RoadMapItem from \"./RoadMapItem\";\r\nimport {Fab, Grid} from \"@material-ui/core\";\r\nimport {RouteComponentProps} from \"@reach/router\";\r\nimport ApiContext from \"../../ApiContext\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport useStyles from \"../../utils/useStyles\";\r\nimport RoadMapEditor from \"./roadmap/RoadMapEditor\";\r\nimport {Project, RoadMap} from \"@tramways/projects-service-api\";\r\n\r\ninterface ProjectPageProps extends RouteComponentProps {\r\n  projectId?: string;\r\n}\r\n\r\nexport default function ProjectPage({navigate, projectId}: ProjectPageProps) {\r\n\r\n  const classes = useStyles();\r\n  const {projectsApi} = useContext(ApiContext);\r\n\r\n  const [project, setProject] = useState<Project | null>(null);\r\n\r\n  const [selectedMap, setSelectedMap] = useState<RoadMap | null>(null);\r\n\r\n  const loadProject = useCallback(() => {\r\n    if (projectId) {\r\n      projectsApi.getProject(projectId).then(response => setProject(response.data));\r\n    }\r\n  }, [projectId, projectsApi]);\r\n\r\n  useEffect(() => {\r\n    loadProject();\r\n  }, [loadProject]);\r\n\r\n  const roadmaps: JSX.Element[] = [];\r\n  if (project && project.roadMaps) {\r\n    project.roadMaps.forEach(roadMap => roadmaps.push(\r\n        (\r\n            <Grid key={roadMap.uuid} item xs={12} sm={6} md={4} lg={3} xl={3}>\r\n              <RoadMapItem\r\n                  project={project}\r\n                  map={roadMap}\r\n                  refresh={loadProject}\r\n                  navigate={navigate}\r\n              />\r\n            </Grid>\r\n        )\r\n    ))\r\n  }\r\n\r\n  return (\r\n      <Page title={`Project ${project?.name}`}>\r\n        <Fab\r\n            className={classes.fab}\r\n            color=\"primary\"\r\n            onClick={() => setSelectedMap({\r\n              name: \"\",\r\n              lanes: [],\r\n              points: []\r\n            })}>\r\n          <AddIcon/>\r\n        </Fab>\r\n        <Grid container spacing={1}>\r\n          {roadmaps}\r\n        </Grid>\r\n        {projectId && selectedMap && (\r\n            <RoadMapEditor\r\n                projectId={projectId}\r\n                map={selectedMap}\r\n                onConfirm={() => {\r\n                  setSelectedMap(null);\r\n                  loadProject();\r\n                }}\r\n                onAbort={() => setSelectedMap(null)}\r\n            />\r\n        )}\r\n      </Page>\r\n  );\r\n}\r\n","import {Button} from \"@material-ui/core\";\r\nimport JSONEditor, {JSONEditorOptions} from 'jsoneditor';\r\nimport React, {FunctionComponent, useCallback, useEffect, useState} from \"react\";\r\nimport Alert from \"./Alert\";\r\n\r\ntype JSONComponentProps = {\r\n  initialJSON: any;\r\n  onChange: (json: any) => void;\r\n  onClose: () => void;\r\n  visible: boolean;\r\n}\r\n\r\nexport const JSONComponent: FunctionComponent<JSONComponentProps> = ({\r\n                                                                       initialJSON,\r\n                                                                       onChange,\r\n                                                                       onClose,\r\n                                                                       visible\r\n                                                                     }) => {\r\n  const [options, ] = useState<JSONEditorOptions>({\r\n    mode: \"code\",\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [editor, setEditor] = useState<JSONEditor>();\r\n\r\n  const containerRef = useCallback(node => {\r\n    if (node !== null) {\r\n      setEditor(new JSONEditor(node, options));\r\n    }\r\n  }, [options]);\r\n\r\n  useEffect(() => {\r\n    if (editor) {\r\n      editor.set(initialJSON);\r\n    }\r\n  }, [editor, initialJSON]);\r\n\r\n  return (<>\r\n        <div className={\"jsoneditor-container\"} ref={containerRef}>\r\n        </div>\r\n        {editor && (<Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              try {\r\n                onChange(editor.get());\r\n              } catch (err) {\r\n                setError(\"Map not valid\");\r\n              }\r\n            }}>\r\n          Save\r\n        </Button>)}\r\n        <Button onClick={onClose}>Close</Button>\r\n        <Alert onClose={() => setError(\"\")} visible={!!error}>\r\n          <p>{error}</p>\r\n        </Alert>\r\n      </>\r\n  );\r\n}\r\n;\r\n","import {DecimalProperty, IntegerProperty, Property} from \"@tramways/projects-service-api\";\r\n\r\nexport function integerProperty(props: Array<Property>, name: string): IntegerProperty {\r\n    return props.find(p => p.name === name) as IntegerProperty;\r\n}\r\n\r\nexport function decimalProperty(props: Array<Property>, name: string): DecimalProperty {\r\n    return props.find(p => p.name === name) as DecimalProperty;\r\n}\r\n","import {TextField} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport {OkCancelDialog} from \"../../../widgets/OkCancelDialog\";\r\nimport {RelevantPoint} from \"@tramways/projects-service-api\";\r\n\r\nexport type NewNodeDialogProps = {\r\n  visible: boolean;\r\n  onCancel: () => void;\r\n  onConfirm: (n: RelevantPoint) => void;\r\n};\r\n\r\nexport default function NewNodeDialog({visible, onCancel, onConfirm}: NewNodeDialogProps) {\r\n\r\n  const [nodeId, setNodeId] = useState(\"\");\r\n\r\n  function confirm() {\r\n    const newNode = {\r\n      id: nodeId,\r\n      category: \"RelevantPoint\",\r\n      configurableType: \"RelevantPoint\",\r\n      props: [],\r\n      links: []\r\n    } as RelevantPoint;\r\n    onConfirm(newNode);\r\n  }\r\n\r\n  return (\r\n      <OkCancelDialog onOk={confirm} onCancel={onCancel} visible={visible}>\r\n        <TextField\r\n            variant={\"outlined\"}\r\n            label=\"ID\"\r\n            onChange={evt => setNodeId(evt.target.value)}\r\n            value={nodeId}\r\n        />\r\n      </OkCancelDialog>\r\n  );\r\n}\r\n","import {FormControl, FormControlProps, InputLabel, MenuItem, Select} from \"@material-ui/core\";\r\nimport React, {useEffect, useRef} from \"react\";\r\nimport useStyles from \"../utils/useStyles\";\r\n\r\ntype SelectEditorProps<T> = {\r\n  optionId?: (option: T) => string;\r\n  optionLabel?: (option: T) => string;\r\n  options: T[];\r\n  value: T;\r\n  label: string;\r\n  multiSelect?: boolean;\r\n  onSelectOption: (option: T | null) => void;\r\n} & FormControlProps;\r\n\r\nexport default function SelectEditor<T>(\r\n    {\r\n      optionId = o => o as unknown as string,\r\n      optionLabel = o => o as unknown as string,\r\n      options,\r\n      value,\r\n      className,\r\n      label,\r\n      multiSelect = false,\r\n      onSelectOption,\r\n    }: SelectEditorProps<T>\r\n) {\r\n\r\n  const {formControl} = useStyles();\r\n\r\n  const inputLabel = useRef<HTMLLabelElement>(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  useEffect(() => {\r\n    setLabelWidth(inputLabel.current ? (inputLabel.current as HTMLLabelElement).offsetWidth : 0);\r\n  }, []);\r\n\r\n  const formClass = className ? `${formControl} ${className}` : formControl;\r\n\r\n  return (\r\n      <FormControl variant=\"outlined\" className={formClass}>\r\n        <InputLabel ref={inputLabel}>{label}</InputLabel>\r\n        <Select\r\n            MenuProps={{\r\n              anchorOrigin: {\r\n                horizontal: \"left\",\r\n                vertical: \"bottom\"\r\n              },\r\n              transformOrigin: {\r\n                horizontal: \"left\",\r\n                vertical: \"top\"\r\n              },\r\n              getContentAnchorEl: null\r\n            }}\r\n            multiple={multiSelect}\r\n            onChange={evt => onSelectOption(evt.target.value ? evt.target.value as T : null)}\r\n            value={value || \"\"}\r\n            labelWidth={labelWidth}>\r\n          {options.map(option => (\r\n              <MenuItem key={optionId(option)} value={option as any}>\r\n                {optionLabel(option)}\r\n              </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n  );\r\n};\r\n","import {\r\n  Configurable,\r\n  Lane,\r\n  Property,\r\n  RelevantPoint,\r\n  RoadMap\r\n} from \"@tramways/projects-service-api\";\r\n\r\nexport function roadMapPoints(roadMap: RoadMap): RelevantPoint[] {\r\n  return roadMap?.points || [];\r\n}\r\n\r\nexport function roadMapLanes(roadMap: RoadMap): Lane[] {\r\n  return roadMap?.lanes || [];\r\n}\r\n\r\nexport function configurableProps(c: Configurable): Property[] {\r\n  if (!c.props) {\r\n    c.props = [];\r\n  }\r\n  return c.props;\r\n}\r\n","import {TextField} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport {OkCancelDialog} from \"../../../widgets/OkCancelDialog\";\r\nimport SelectEditor from \"../../../inputs/SelectEditor\";\r\nimport useStyles from \"../../../utils/useStyles\";\r\nimport {Lane, RelevantPoint, RoadMap} from \"@tramways/projects-service-api\";\r\nimport {roadMapPoints} from \"./roadmap-utils\";\r\n\r\nexport type NewLaneDialogProps = {\r\n  roadMap: RoadMap;\r\n  visible: boolean;\r\n  onCancel: () => void;\r\n  onConfirm: (n: RelevantPoint) => void;\r\n};\r\n\r\nexport default function NewLaneDialog({\r\n                                        roadMap,\r\n                                        visible,\r\n                                        onCancel,\r\n                                        onConfirm\r\n                                      }: NewLaneDialogProps) {\r\n\r\n  const {formControl} = useStyles();\r\n\r\n  const [laneId, setLaneId] = useState(\"\");\r\n\r\n  const [source, setSource] = useState<string | null>(null);\r\n  const [destination, setDestination] = useState<string | null>(null);\r\n\r\n  function confirm() {\r\n    const newLane = {\r\n      id: laneId,\r\n      category: \"Lane\",\r\n      configurableType: \"Lane\",\r\n      props: [],\r\n      sourceId: source,\r\n      destinationId: destination\r\n    } as Lane;\r\n    onConfirm(newLane);\r\n  }\r\n\r\n  return (\r\n      <OkCancelDialog\r\n          onOk={confirm}\r\n          onCancel={onCancel}\r\n          valid={!!(laneId && source && destination && source !== destination)}\r\n          visible={visible}>\r\n        <TextField\r\n            className={formControl}\r\n            variant={\"outlined\"}\r\n            label=\"ID\"\r\n            onChange={evt => setLaneId(evt.target.value)}\r\n            value={laneId}\r\n        />\r\n        <SelectEditor<string | null>\r\n            options={roadMapPoints(roadMap).map(point => point.id || null)}\r\n            value={source}\r\n            label={\"Source\"}\r\n            onSelectOption={v => setSource(v)}>\r\n        </SelectEditor>\r\n        <SelectEditor<string | null>\r\n            options={roadMapPoints(roadMap).map(point => point.id || null)}\r\n            value={destination}\r\n            label={\"Destination\"}\r\n            onSelectOption={v => setDestination(v)}>\r\n        </SelectEditor>\r\n      </OkCancelDialog>\r\n  );\r\n}\r\n","export const PropertyTypes = {\r\n    INTEGER: \"IntegerProperty\",\r\n    STRING: \"StringProperty\",\r\n    DECIMAL: \"DecimalProperty\",\r\n    CHOICE: \"ChoiceProperty\",\r\n    DISTRIBUTION: \"DistributionProperty\"\r\n};\r\n","import {PropertyTypes} from \"./inputs/PropertyTypes\";\r\nimport {\r\n  newExponentialDistribution,\r\n  newUniformDistribution\r\n} from \"./inputs/distributions/distribution-utils\";\r\nimport {\r\n  ChoiceProperty,\r\n  DecimalProperty, DistributionProperty,\r\n  IntegerProperty,\r\n  StringProperty\r\n} from \"@tramways/projects-service-api\";\r\n\r\nexport function newStringProperty(): StringProperty {\r\n  return {\r\n    name: \"\",\r\n    value: \"\",\r\n    propertyType: PropertyTypes.STRING\r\n  };\r\n}\r\n\r\nexport function newIntegerProperty(): IntegerProperty {\r\n  return {\r\n    name: \"\",\r\n    value: 0,\r\n    propertyType: PropertyTypes.INTEGER\r\n  };\r\n}\r\n\r\nexport function newDecimalProperty(): DecimalProperty {\r\n  return {\r\n    name: \"\",\r\n    value: 0,\r\n    propertyType: PropertyTypes.DECIMAL\r\n  };\r\n}\r\n\r\nexport function newChoiceProperty(): ChoiceProperty {\r\n  return {\r\n    name: \"\",\r\n    value: undefined,\r\n    choices: [],\r\n    propertyType: PropertyTypes.CHOICE\r\n  };\r\n}\r\n\r\nexport function newUniformDistributionProperty(): DistributionProperty {\r\n  return {\r\n    name: \"\",\r\n    value: newUniformDistribution(),\r\n    propertyType: PropertyTypes.DISTRIBUTION\r\n  };\r\n}\r\n\r\nexport function newExponentialDistributionProperty(): DistributionProperty {\r\n  return {\r\n    name: \"\",\r\n    value: newExponentialDistribution(),\r\n    propertyType: PropertyTypes.DISTRIBUTION\r\n  };\r\n}\r\n\r\n\r\nexport function createDecimal(name: string, value: number): DecimalProperty {\r\n  return {\r\n    propertyType: \"DecimalProperty\",\r\n    name: name,\r\n    value: value\r\n  } as DecimalProperty;\r\n}\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  ListItemAvatar,\r\n  ListItemText\r\n} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {Add} from \"@material-ui/icons\";\r\nimport NewNodeDialog from \"./NewNodeDialog\";\r\nimport NewLaneDialog from \"./NewLaneDialog\";\r\nimport {createDecimal} from \"../../configurations/properties/properties-utils\";\r\nimport {Lane, RelevantPoint, RoadMap} from \"@tramways/projects-service-api\";\r\n\r\nexport interface RoadMapMenuProps {\r\n  roadMap: RoadMap;\r\n  visible: boolean;\r\n  onClose: () => void;\r\n  onCreateNode: (n: RelevantPoint) => void;\r\n  onCreateLane: (l: Lane) => void;\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport default function RoadMapMenu(\r\n    {\r\n      roadMap,\r\n      onClose,\r\n      onCreateNode,\r\n      onCreateLane,\r\n      x, y,\r\n      visible\r\n    }: RoadMapMenuProps\r\n) {\r\n\r\n  const [showNewNodeDialog, setShowNewNodeDialog] = useState(false);\r\n  const [showNewLaneDialog, setShowNewLaneDialog] = useState(false);\r\n\r\n  return (\r\n      <Dialog onClose={onClose} open={visible}>\r\n        <DialogContent>\r\n          <List>\r\n            <ListItem\r\n                button\r\n                onClick={() => setShowNewNodeDialog(true)}>\r\n              <ListItemAvatar>\r\n                <Avatar><Add/></Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"Nuovo nodo\"/>\r\n            </ListItem>\r\n            <ListItem\r\n                button\r\n                onClick={() => setShowNewLaneDialog(true)}>\r\n              <ListItemAvatar>\r\n                <Avatar><Add/></Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"Nuovo collegamento\"/>\r\n            </ListItem>\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => onClose()}>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n        {showNewNodeDialog && (\r\n            <NewNodeDialog\r\n                visible={showNewNodeDialog}\r\n                onCancel={() => setShowNewNodeDialog(false)}\r\n                onConfirm={node =>\r\n                    onCreateNode({\r\n                      ...node,\r\n                      props: [\r\n                        ...node?.props || [],\r\n                        createDecimal(\"x\", x),\r\n                        createDecimal(\"y\", y),\r\n                      ]\r\n                    })\r\n                }/>\r\n        )}\r\n        {showNewLaneDialog && (\r\n            <NewLaneDialog\r\n                roadMap={roadMap}\r\n                visible={showNewLaneDialog}\r\n                onCancel={() => setShowNewLaneDialog(false)}\r\n                onConfirm={lane => onCreateLane(lane)}/>\r\n        )}\r\n      </Dialog>\r\n  );\r\n\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {OkCancelDialog} from \"../../../widgets/OkCancelDialog\";\r\nimport {FormControlLabel, Radio, RadioGroup} from \"@material-ui/core\";\r\nimport {ItemConfiguration} from \"@tramways/projects-service-api\";\r\n\r\nexport interface ConfigurationSelectionDialogProps {\r\n  configurations: ItemConfiguration[];\r\n  onCancel: () => void;\r\n  onOk: (c: ItemConfiguration | null) => void;\r\n}\r\n\r\nexport default function ConfigurationSelectionDialog(\r\n    {\r\n      configurations,\r\n      onOk,\r\n      onCancel\r\n    }: ConfigurationSelectionDialogProps\r\n) {\r\n\r\n  const [selectedConfiguration, setSelectedConfiguration] = useState<string | null>(null);\r\n\r\n  function findSelectedConfiguration() {\r\n    const conf = configurations.find(c => c.uuid === selectedConfiguration);\r\n    onOk(conf || null);\r\n  }\r\n\r\n  return <OkCancelDialog visible={true} onCancel={onCancel} onOk={findSelectedConfiguration}>\r\n    <RadioGroup\r\n        value={selectedConfiguration}\r\n        onChange={evt => setSelectedConfiguration(evt.target.value)}>\r\n      {configurations.map((c, index) => (\r\n          <FormControlLabel\r\n              key={c.uuid}\r\n              control={\r\n                <Radio value={c.uuid}/>\r\n              }\r\n              label={c.name}\r\n          />\r\n      ))}\r\n    </RadioGroup>\r\n  </OkCancelDialog>\r\n}\r\n","import {TextField} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport useStyles from \"../../../../utils/useStyles\";\r\nimport {IntegerProperty} from \"@tramways/projects-service-api\";\r\n\r\nexport interface IntegerPropertyInputProps {\r\n  property: IntegerProperty;\r\n  onChange: (value: IntegerProperty) => void\r\n}\r\n\r\nexport default function IntegerPropertyInput({property, onChange}: IntegerPropertyInputProps) {\r\n  const classes = useStyles();\r\n  return (\r\n      <TextField\r\n          type={\"number\"}\r\n          className={classes.formControl}\r\n          label={property?.description || \"Value\"}\r\n          variant=\"outlined\"\r\n          value={property?.value || 0}\r\n          onChange={evt => onChange({\r\n            ...property,\r\n            value: parseInt(evt.target.value)\r\n          })}\r\n      />\r\n  );\r\n}\r\n","import {TextField} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport useStyles from \"../../../../utils/useStyles\";\r\nimport {StringProperty} from \"@tramways/projects-service-api\";\r\n\r\nexport interface StringPropertyInputProps {\r\n  property: StringProperty;\r\n  onChange: (value: StringProperty) => void\r\n}\r\n\r\nexport default function StringPropertyInput({property, onChange}: StringPropertyInputProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <TextField\r\n          className={classes.formControl}\r\n          label={property?.description || \"Value\"}\r\n          variant=\"outlined\"\r\n          value={property?.value || ''}\r\n          onChange={evt => onChange({\r\n            ...property,\r\n            value: evt.target.value\r\n          })}\r\n      />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport useStyles from \"../../../../utils/useStyles\";\r\nimport {DecimalProperty} from \"@tramways/projects-service-api\";\r\n\r\nexport interface DecimalPropertyInputProps {\r\n  property: DecimalProperty;\r\n  onChange: (value: DecimalProperty) => void\r\n}\r\n\r\nexport default function DecimalPropertyInput({property, onChange}: DecimalPropertyInputProps) {\r\n  const classes = useStyles();\r\n  return (\r\n      <TextField\r\n          type={\"number\"}\r\n          className={classes.formControl}\r\n          label={property?.description || \"Value\"}\r\n          variant=\"outlined\"\r\n          value={property?.value || 0}\r\n          onChange={evt => onChange({\r\n            ...property,\r\n            value: parseFloat(evt.target.value)\r\n          })}\r\n      />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SelectEditor from \"../../../../inputs/SelectEditor\";\r\nimport {ChoiceElement, ChoiceProperty} from \"@tramways/projects-service-api\";\r\n\r\nexport interface ChoicePropertyInputProps {\r\n  property: ChoiceProperty;\r\n  onChange: (value: ChoiceProperty) => void\r\n}\r\n\r\nexport default function ChoicePropertyInput({property, onChange}: ChoicePropertyInputProps) {\r\n\r\n  function findValue() {\r\n    return property?.choices?.find(prop => prop.id === property.value) || null;\r\n  }\r\n\r\n  return (\r\n      <SelectEditor<ChoiceElement | null>\r\n          optionId={option => option?.id || \"\"}\r\n          optionLabel={option => option?.label || \"\"}\r\n          options={property?.choices || []}\r\n          value={findValue()}\r\n          disabled={false}\r\n          label={property?.description || \"\"}\r\n          multiSelect={false}\r\n          onSelectOption={v => onChange({\r\n            ...property,\r\n            value: v?.id\r\n          })}>\r\n      </SelectEditor>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport useStyles from \"../../../../../utils/useStyles\";\r\nimport {UniformDistribution} from \"@tramways/projects-service-api\";\r\n\r\nexport interface UniformDistributionPropertyInputProps {\r\n  distribution: UniformDistribution;\r\n  onChange: (value: UniformDistribution) => void\r\n}\r\n\r\nexport default function UniformDistributionInput(\r\n    {\r\n      distribution,\r\n      onChange\r\n    }: UniformDistributionPropertyInputProps\r\n) {\r\n  const classes = useStyles();\r\n  return (\r\n      <div className={\"flex-row\"}>\r\n        <TextField\r\n            type={\"number\"}\r\n            className={classes.formControl}\r\n            label={\"Min\"}\r\n            variant=\"outlined\"\r\n            value={distribution?.left || 0}\r\n            onChange={evt => onChange({\r\n              ...distribution,\r\n              left: parseFloat(evt.target.value)\r\n            })}\r\n        />\r\n        <TextField\r\n            type={\"number\"}\r\n            className={classes.formControl}\r\n            label={\"Max\"}\r\n            variant=\"outlined\"\r\n            value={distribution?.right || 0}\r\n            onChange={evt => onChange({\r\n              ...distribution,\r\n              right: parseFloat(evt.target.value)\r\n            })}\r\n        />\r\n      </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport useStyles from \"../../../../../utils/useStyles\";\r\nimport {ExponentialDistribution} from \"@tramways/projects-service-api\";\r\n\r\nexport interface ExponentialDistributionPropertyInputProps {\r\n    distribution: ExponentialDistribution;\r\n    onChange: (value: ExponentialDistribution) => void\r\n}\r\n\r\nexport default function ExponentialDistributionInput({distribution, onChange}: ExponentialDistributionPropertyInputProps) {\r\n    const classes = useStyles();\r\n    return (\r\n        <TextField\r\n            type={\"number\"}\r\n            className={classes.formControl}\r\n            label={\"Lambda\"}\r\n            variant=\"outlined\"\r\n            value={distribution?.lambda || 0}\r\n            onChange={evt => onChange({\r\n                ...distribution,\r\n                lambda: parseFloat(evt.target.value)\r\n            })}\r\n        />\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport UniformDistributionInput from \"./distributions/UniformDistributionInput\";\r\nimport ExponentialDistributionInput from \"./distributions/ExponentialDistributionInput\";\r\nimport {Distribution, DistributionProperty} from \"@tramways/projects-service-api\";\r\n\r\nexport interface DistributionPropertyInputProps {\r\n    property: DistributionProperty;\r\n    onChange: (prop: DistributionProperty) => void\r\n}\r\n\r\nexport default function DistributionPropertyInput(\r\n    {\r\n        property,\r\n        onChange\r\n    }: DistributionPropertyInputProps\r\n) {\r\n    const componentMap = new Map<string, any>();\r\n    componentMap.set(\"UniformDistribution\", UniformDistributionInput);\r\n    componentMap.set(\"ExponentialDistribution\", ExponentialDistributionInput);\r\n\r\n    let Component = property?.value?.distributionType && componentMap.get(property.value.distributionType);\r\n    if (!Component) {\r\n        Component = () => <p>Unsupported</p>;\r\n    }\r\n\r\n    function onChangeDistribution(d: Distribution) {\r\n        onChange({\r\n            ...property,\r\n            value: d\r\n        })\r\n    }\r\n\r\n    return <Component distribution={property.value} onChange={onChangeDistribution}/>;\r\n}\r\n","import React from \"react\";\r\nimport IntegerPropertyInput from \"./IntegerPropertyInput\";\r\nimport StringPropertyInput from \"./StringPropertyInput\";\r\nimport DecimalPropertyInput from \"./DecimalPropertyInput\";\r\nimport ChoicePropertyInput from \"./ChoicePropertyInput\";\r\nimport {PropertyTypes} from \"./PropertyTypes\";\r\nimport DistributionPropertyInput from \"./DistributionPropertyInput\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {\r\n    ChoiceProperty,\r\n    DecimalProperty, DistributionProperty, ExponentialDistribution,\r\n    IntegerProperty,\r\n    Property,\r\n    StringProperty, UniformDistribution\r\n} from \"@tramways/projects-service-api\";\r\n\r\nexport interface PropertyInputProps {\r\n    property: Property;\r\n    onChange: (prop: Property) => void\r\n}\r\n\r\nexport default function PropertyInput({property, onChange}: PropertyInputProps) {\r\n    const componentMap = new Map<string, any>();\r\n    componentMap.set(PropertyTypes.INTEGER, IntegerPropertyInput);\r\n    componentMap.set(PropertyTypes.DECIMAL, DecimalPropertyInput);\r\n    componentMap.set(PropertyTypes.STRING, StringPropertyInput);\r\n    componentMap.set(PropertyTypes.CHOICE, ChoicePropertyInput);\r\n    componentMap.set(PropertyTypes.DISTRIBUTION, DistributionPropertyInput);\r\n\r\n    let Component = componentMap.get(property.propertyType);\r\n    if (!Component) {\r\n        Component = () => <p>Unsupported</p>;\r\n    }\r\n    return <div>\r\n        <Typography variant={\"h5\"}>{property.name}</Typography>\r\n        <Component property={property} onChange={onChange}/>\r\n    </div>;\r\n}\r\n\r\nexport function renderProperty(prop: Property) {\r\n    switch (prop.propertyType) {\r\n        case PropertyTypes.INTEGER:\r\n            return (prop as IntegerProperty).value;\r\n        case PropertyTypes.DECIMAL:\r\n            return (prop as DecimalProperty).value;\r\n        case PropertyTypes.STRING:\r\n            return (prop as StringProperty).value;\r\n        case PropertyTypes.CHOICE:\r\n            return (prop as ChoiceProperty).choices?.map(choice => choice.label).join(\", \");\r\n        case PropertyTypes.DISTRIBUTION:\r\n            return renderDistribution(prop as DistributionProperty);\r\n    }\r\n}\r\n\r\nfunction renderDistribution(prop: DistributionProperty) {\r\n    switch (prop?.value?.distributionType) {\r\n        case \"UniformDistribution\":\r\n            return \"[\" + (prop.value as UniformDistribution).left + \",\" + (prop.value as UniformDistribution).right + \"]\";\r\n        case \"ExponentialDistribution\":\r\n            return (prop.value as ExponentialDistribution).lambda\r\n    }\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport {OkCancelDialog} from \"../../../widgets/OkCancelDialog\";\r\nimport {FormControlLabel, Radio, RadioGroup} from \"@material-ui/core\";\r\nimport {Property} from \"@tramways/projects-service-api\";\r\n\r\nexport interface PropertySelectionDialogProps {\r\n  properties: Property[];\r\n  onCancel: () => void;\r\n  onOk: (p: Property | null) => void;\r\n}\r\n\r\nexport default function PropertySelectionDialog(\r\n    {\r\n      properties,\r\n      onOk,\r\n      onCancel\r\n    }: PropertySelectionDialogProps\r\n) {\r\n\r\n  const [selectedProperty, setSelectedProperty] = useState<string | null>(null);\r\n\r\n  function findSelectedProperty() {\r\n    const prop = properties.find(p => p.name === selectedProperty) || null;\r\n    onOk(prop);\r\n  }\r\n\r\n  return <OkCancelDialog visible={true} onCancel={onCancel} onOk={findSelectedProperty}>\r\n    <RadioGroup\r\n        value={selectedProperty}\r\n        onChange={evt => setSelectedProperty(evt.target.value)}>\r\n      {properties.map((p, index) => (\r\n          <FormControlLabel\r\n              key={p.name + \"\" + index}\r\n              control={\r\n                <Radio value={p.name}/>\r\n              }\r\n              label={p.name}\r\n          />\r\n      ))}\r\n    </RadioGroup>\r\n  </OkCancelDialog>\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {IconButton, InputAdornment, TextField} from \"@material-ui/core\";\r\nimport useStyles from \"../../../../utils/useStyles\";\r\nimport {Search, Settings} from \"@material-ui/icons\";\r\nimport PropertySelectionDialog from \"../PropertySelectionDialog\";\r\nimport Alert from \"../../../../widgets/Alert\";\r\nimport {PropertyTypes} from \"../inputs/PropertyTypes\";\r\nimport SelectEditor from \"../../../../inputs/SelectEditor\";\r\nimport {\r\n  newChoiceProperty,\r\n  newDecimalProperty,\r\n  newIntegerProperty,\r\n  newStringProperty,\r\n  newUniformDistributionProperty\r\n} from \"../properties-utils\";\r\nimport ChoicePropertyContentEditor from \"./ChoicePropertyEditor\";\r\nimport DistributionPropertyEditor from \"./DistributionPropertyEditor\";\r\nimport IntegerPropertyEditor from \"./IntegerPropertyEditor\";\r\nimport DecimalPropertyEditor from \"./DecimalPropertyEditor\";\r\nimport StringPropertyEditor from \"./StringPropertyEditor\";\r\nimport {Property} from \"@tramways/projects-service-api\";\r\n\r\nexport interface PropertyEditorProps {\r\n  property: Property;\r\n  onChange: (prop: Property) => void,\r\n  suggestions?: Property[]\r\n}\r\n\r\nconst editorsMap = new Map<string, any>();\r\neditorsMap.set(PropertyTypes.INTEGER, IntegerPropertyEditor);\r\neditorsMap.set(PropertyTypes.DECIMAL, DecimalPropertyEditor);\r\neditorsMap.set(PropertyTypes.STRING, StringPropertyEditor);\r\neditorsMap.set(PropertyTypes.CHOICE, ChoicePropertyContentEditor);\r\neditorsMap.set(PropertyTypes.DISTRIBUTION, DistributionPropertyEditor);\r\n\r\nexport default function PropertyEditor(\r\n    {\r\n      property,\r\n      onChange,\r\n      suggestions = []\r\n    }: PropertyEditorProps\r\n) {\r\n\r\n  const [editValue, setEditValue] = useState(false);\r\n\r\n  const {formControl} = useStyles();\r\n\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n\r\n  function selectSuggestion(prop: Property | null) {\r\n    if (prop) {\r\n      setShowSuggestions(false);\r\n      onChange({\r\n        ...prop\r\n      });\r\n    }\r\n  }\r\n\r\n  function changePropertyType(type: string | null) {\r\n    switch (type) {\r\n      case PropertyTypes.INTEGER:\r\n        onChange(newIntegerProperty());\r\n        break;\r\n      case PropertyTypes.DECIMAL:\r\n        onChange(newDecimalProperty());\r\n        break;\r\n      case PropertyTypes.CHOICE:\r\n        onChange(newChoiceProperty());\r\n        break;\r\n      case PropertyTypes.DISTRIBUTION:\r\n        onChange(newUniformDistributionProperty());\r\n        break;\r\n      case PropertyTypes.STRING:\r\n      default:\r\n        onChange(newStringProperty());\r\n        break;\r\n    }\r\n  }\r\n\r\n  let SpecificEditor = editorsMap.get(property.propertyType);\r\n  if (!SpecificEditor) {\r\n    SpecificEditor = () => <p>Unsupported</p>;\r\n  }\r\n\r\n  return <div className={\"flex-row flex-grow justify-space-between\"}>\r\n    <SelectEditor<string>\r\n        className={\"flex-grow\"}\r\n        options={Object.values(PropertyTypes)}\r\n        value={property && property.propertyType}\r\n        label={\"Property type\"}\r\n        onSelectOption={(type) => changePropertyType(type)}\r\n    />\r\n    <TextField\r\n        className={formControl}\r\n        label={\"Name\"}\r\n        variant=\"outlined\"\r\n        value={property?.name || ''}\r\n        onChange={evt => onChange({\r\n          ...property,\r\n          name: evt.target.value\r\n        })}\r\n        InputProps={{\r\n          endAdornment: <InputAdornment position=\"end\">\r\n            <IconButton onClick={() => setShowSuggestions(true)}>\r\n              <Search/>\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }}\r\n    />\r\n    <IconButton onClick={() => setEditValue(true)}>\r\n      <Settings/>\r\n    </IconButton>\r\n    <Alert\r\n        title={property?.name + \" content editing\"}\r\n        visible={editValue}\r\n        onClose={() => setEditValue(false)}\r\n        buttonColor={\"default\"}>\r\n      <SpecificEditor property={property} onChange={onChange}/>\r\n    </Alert>\r\n    {showSuggestions && (\r\n        <PropertySelectionDialog\r\n            properties={suggestions}\r\n            onOk={selectSuggestion}\r\n            onCancel={() => setShowSuggestions(false)}\r\n        />\r\n    )}\r\n  </div>;\r\n}\r\n\r\n\r\n","import {ExponentialDistribution, UniformDistribution} from \"@tramways/projects-service-api\";\r\n\r\nexport function newUniformDistribution(): UniformDistribution {\r\n    return {\r\n        distributionType: \"UniformDistributionType\",\r\n        left: 0,\r\n        right: 1\r\n    }\r\n}\r\n\r\nexport function newExponentialDistribution(): ExponentialDistribution {\r\n    return {\r\n        distributionType: \"UniformDistributionType\",\r\n        lambda: 1\r\n    }\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {OkCancelDialog} from \"../../../../widgets/OkCancelDialog\";\r\nimport {newStringProperty} from \"../properties-utils\";\r\nimport PropertyEditor from \"./PropertyEditor\";\r\nimport {Property} from \"@tramways/projects-service-api\";\r\n\r\nexport type PropertyEditorDialogProps = {\r\n    suggestions?: Array<Property>;\r\n    onOk: (value: Property) => void;\r\n    onCancel: () => void;\r\n    valid?: boolean\r\n    large?: boolean;\r\n    visible: boolean;\r\n    cancelText?: string;\r\n    okText?: string;\r\n};\r\n\r\nexport default function PropertyEditorDialog({\r\n    suggestions = [],\r\n    visible,\r\n    onCancel,\r\n    onOk\r\n}: PropertyEditorDialogProps) {\r\n\r\n    const [value, setValue] = useState<Property>(newStringProperty());\r\n\r\n    return (\r\n        <OkCancelDialog\r\n            title={\"Property creation\"}\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={() => {\r\n                onOk(value);\r\n                setValue(newStringProperty());\r\n            }}>\r\n            <PropertyEditor property={value} onChange={v => setValue(v)} suggestions={suggestions}/>\r\n        </OkCancelDialog>\r\n    );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport {ButtonGroup, IconButton} from \"@material-ui/core\";\r\nimport {Add, Delete, Search} from \"@material-ui/icons\"\r\nimport ConfigurationSelectionDialog\r\n  from \"../../configurations/properties/ConfigurationSelectionDialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PropertyInput from \"../../configurations/properties/inputs/PropertyInput\";\r\nimport PropertyEditorDialog from \"../../configurations/properties/editors/PropertyEditorDialog\";\r\nimport {Configurable, ItemConfiguration, Property} from \"@tramways/projects-service-api\";\r\nimport {configurableProps} from \"./roadmap-utils\";\r\n\r\nexport interface ConfigurableEditorProps<C extends Configurable> {\r\n  element: C;\r\n  onChange: (element: C) => void;\r\n}\r\n\r\nexport default function ConfigurableEditor<C extends Configurable>({\r\n                                                                     element, onChange\r\n                                                                   }: ConfigurableEditorProps<C>) {\r\n\r\n  // const {configurationsApi} = useContext(ApiContext);\r\n\r\n  const [presets, ] = useState<Array<ItemConfiguration>>([]);\r\n\r\n  const [showConfigurations, setShowConfigurations] = useState(false);\r\n  const [creatingProp, setCreatingProp] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //     if (element?.category) {\r\n  //         configurationsApi.getConfigurations(element.category)\r\n  //             .then(response => setPresets(response.data));\r\n  //     }\r\n  // }, [configurationsApi, element]);\r\n\r\n  let suggestedProps = presets.flatMap(conf => conf.props || []);\r\n\r\n  suggestedProps = suggestedProps\r\n  .filter((prop, i) => suggestedProps.findIndex(p => p?.name === prop?.name) === i);\r\n\r\n  function addNewProp(prop: Property) {\r\n    onChange({\r\n      ...element,\r\n      props: configurableProps(element).concat([prop])\r\n    });\r\n    setCreatingProp(false);\r\n  }\r\n\r\n  function updateProp(index: number, prop: Property) {\r\n    const oldProps = configurableProps(element);\r\n    onChange({\r\n      ...element,\r\n      props: oldProps.slice(0, index).concat([prop]).concat(oldProps.slice(index + 1, oldProps.length))\r\n    });\r\n  }\r\n\r\n  function deleteProp(index: number) {\r\n    const oldProps = configurableProps(element);\r\n    onChange({\r\n      ...element,\r\n      props: oldProps.slice(0, index).concat(oldProps.slice(index + 1, oldProps.length))\r\n    });\r\n  }\r\n\r\n  function applyConfiguration(conf: ItemConfiguration | null) {\r\n    setShowConfigurations(false);\r\n\r\n    let newProps = [...configurableProps(element)];\r\n    const confProps = conf?.props || [];\r\n    confProps.forEach(prop => {\r\n      const index = newProps.findIndex(p => p.name === prop.name);\r\n      if (index >= 0) {\r\n        newProps = newProps.slice(0, index).concat([prop]).concat(newProps.slice(index + 1, newProps.length));\r\n      } else {\r\n        newProps = newProps.concat([prop]);\r\n      }\r\n    });\r\n\r\n    onChange({\r\n      ...element,\r\n      props: newProps\r\n    });\r\n  }\r\n\r\n  return <div>\r\n    <div className={\"flex-row justify-space-between\"}>\r\n      <ButtonGroup>\r\n        <Button\r\n            color={\"primary\"}\r\n            variant={\"outlined\"}\r\n            onClick={() => setCreatingProp(true)}\r\n            endIcon={<Add/>}>\r\n          Add\r\n        </Button>\r\n        <Button\r\n            color={\"primary\"}\r\n            variant={\"outlined\"}\r\n            onClick={() => setShowConfigurations(true)}\r\n            endIcon={<Search/>}>\r\n          Add from preset\r\n        </Button>\r\n      </ButtonGroup>\r\n    </div>\r\n    {configurableProps(element).map((prop, index) => (\r\n        <div key={prop.name || \"\" + index} className={\"flex-row justify-space-between\"}>\r\n          <PropertyInput property={prop} onChange={prop => updateProp(index, prop)}/>\r\n          <IconButton color={\"primary\"} onClick={() => deleteProp(index)}>\r\n            <Delete/>\r\n          </IconButton>\r\n        </div>\r\n    ))}\r\n    {showConfigurations && (\r\n        <ConfigurationSelectionDialog\r\n            configurations={presets}\r\n            onCancel={() => setShowConfigurations(false)}\r\n            onOk={conf => applyConfiguration(conf)}\r\n        />\r\n    )}\r\n    {creatingProp && (\r\n        <PropertyEditorDialog\r\n            suggestions={suggestedProps || []}\r\n            onOk={addNewProp}\r\n            onCancel={() => setCreatingProp(false)}\r\n            visible={creatingProp}/>\r\n    )}\r\n  </div>\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {OkCancelDialog} from \"../../../widgets/OkCancelDialog\";\r\nimport ConfigurableEditor from \"./ConfigurableEditor\";\r\nimport {Configurable} from \"@tramways/projects-service-api\";\r\n\r\nexport interface ConfigurableEditorDialogProps<C extends Configurable> {\r\n  visible: boolean;\r\n  element: C;\r\n  onOk: (element: C) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nexport default function ConfigurableEditorDialog<C extends Configurable>(\r\n    {\r\n      visible,\r\n      element,\r\n      onOk,\r\n      onCancel\r\n    }: ConfigurableEditorDialogProps<C>\r\n) {\r\n\r\n  const [currentElement, setCurrentElement] = useState(element);\r\n\r\n  useEffect(() => setCurrentElement(element), [element]);\r\n\r\n  return <OkCancelDialog\r\n      title={element.id + ' configuration'}\r\n      size={\"md\"}\r\n      visible={visible}\r\n      onOk={() => onOk(currentElement)}\r\n      onCancel={() => onCancel()}>\r\n    <ConfigurableEditor element={currentElement} onChange={e => setCurrentElement(e)}/>\r\n  </OkCancelDialog>\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {IconButton, Typography} from \"@material-ui/core\";\r\nimport {Delete, Settings} from \"@material-ui/icons\";\r\nimport SelectEditor from \"../../../inputs/SelectEditor\";\r\nimport ConfigurableEditorDialog from \"./ConfigurableEditorDialog\";\r\nimport {CrossingLink, RelevantPoint, RoadMap} from \"@tramways/projects-service-api\";\r\n\r\nexport interface CrossingLinkEditorProps {\r\n  roadMap: RoadMap,\r\n  relevantPoint: RelevantPoint\r\n  crossingLink: CrossingLink;\r\n  onChange: (element: CrossingLink) => void;\r\n  onDelete: () => void;\r\n}\r\n\r\nexport default function CrossingLinkEditor(\r\n    {\r\n      roadMap,\r\n      relevantPoint,\r\n      onChange,\r\n      crossingLink,\r\n      onDelete,\r\n    }: CrossingLinkEditorProps\r\n) {\r\n\r\n  const [editingLink, setEditingLink] = useState(false);\r\n\r\n  const sources = roadMap?.lanes?.filter(lane => lane?.destinationId === relevantPoint.id)\r\n  .map(lane => lane.id) || [];\r\n  const destinations = roadMap?.lanes?.filter(lane => lane?.sourceId === relevantPoint.id)\r\n  .map(lane => lane.id) || [];\r\n\r\n  return <div className={\"flex-row align-center flex-grow justify-space-between\"}>\r\n    <Typography className={\"flex-grow\"} variant={\"h6\"}>{crossingLink.id}</Typography>\r\n    <SelectEditor<string | undefined>\r\n        options={sources}\r\n        value={crossingLink.sourceId}\r\n        label={\"Source\"}\r\n        onSelectOption={v => onChange({\r\n          ...crossingLink,\r\n          sourceId: v || \"\"\r\n        })}>\r\n    </SelectEditor>\r\n    <SelectEditor<string | undefined>\r\n        options={destinations}\r\n        value={crossingLink.destinationId}\r\n        label={\"Destination\"}\r\n        onSelectOption={v => onChange({\r\n          ...crossingLink,\r\n          destinationId: v || \"\"\r\n        })}>\r\n    </SelectEditor>\r\n    <IconButton color={\"primary\"} onClick={() => setEditingLink(true)}>\r\n      <Settings/>\r\n    </IconButton>\r\n    <IconButton color={\"primary\"} onClick={() => onDelete()}>\r\n      <Delete/>\r\n    </IconButton>\r\n    <ConfigurableEditorDialog\r\n        visible={editingLink}\r\n        element={crossingLink}\r\n        onOk={link => {\r\n          onChange(link);\r\n          setEditingLink(false);\r\n        }}\r\n        onCancel={() => setEditingLink(false)}/>\r\n  </div>\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {IconButton, Typography} from \"@material-ui/core\";\r\nimport {Add} from \"@material-ui/icons\"\r\nimport SelectEditor from \"../../../inputs/SelectEditor\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport useStyles from \"../../../utils/useStyles\";\r\nimport CrossingLinkEditor from \"./CrossingLinkEditor\";\r\nimport {CrossingLink, RelevantPoint, RoadMap} from \"@tramways/projects-service-api\";\r\n\r\nexport interface RelevantPointLinksEditorProps {\r\n  roadMap: RoadMap,\r\n  element: RelevantPoint;\r\n  onChange: (element: RelevantPoint) => void;\r\n}\r\n\r\nexport default function RelevantPointLinksEditor(\r\n    {\r\n      roadMap,\r\n      element, onChange\r\n    }: RelevantPointLinksEditorProps\r\n) {\r\n\r\n  const {formControl} = useStyles();\r\n\r\n  const [newLink, setNewLink] = useState<CrossingLink>(createLink());\r\n\r\n  const sources = roadMap?.lanes?.filter(lane => lane.destinationId === element.id)\r\n  .map(lane => lane.id) || [];\r\n\r\n  const destinations = roadMap?.lanes?.filter(lane => lane.sourceId === element.id)\r\n  .map(lane => lane.id) || [];\r\n\r\n  function addNewLink() {\r\n    onChange({\r\n      ...element,\r\n      links: [\r\n        ...element?.links || [],\r\n        newLink\r\n      ]\r\n    });\r\n    setNewLink(createLink());\r\n  }\r\n\r\n  function updateLink(link: CrossingLink, index: number) {\r\n    onChange({\r\n      ...element,\r\n      links: element?.links?.slice(0, index).concat([link]).concat(element.links.slice(index + 1, element.links.length))\r\n    });\r\n  }\r\n\r\n  function deleteLink(index: number) {\r\n    onChange({\r\n      ...element,\r\n      links: element?.links?.slice(0, index).concat(element.links.slice(index + 1, element.links.length))\r\n    });\r\n  }\r\n\r\n  function isNewLinkValid() {\r\n    return (newLink.destinationId || newLink.sourceId) && newLink.id && newLink.destinationId !== newLink.sourceId;\r\n  }\r\n\r\n  return <div>\r\n    <Typography variant={\"h6\"}>New link</Typography>\r\n    <div className={\"flex-row justify-space-between\"}>\r\n      <TextField\r\n          className={formControl}\r\n          label={\"ID\"}\r\n          variant=\"outlined\"\r\n          value={newLink.id || ''}\r\n          onChange={evt => setNewLink({\r\n            ...newLink,\r\n            id: evt.target.value\r\n          })}\r\n      />\r\n      <SelectEditor<string | undefined>\r\n          options={sources}\r\n          value={newLink.sourceId}\r\n          label={\"Source\"}\r\n          onSelectOption={v => setNewLink({\r\n            ...newLink,\r\n            sourceId: v || \"\"\r\n          })}>\r\n      </SelectEditor>\r\n      <SelectEditor<string | undefined>\r\n          options={destinations}\r\n          value={newLink.destinationId}\r\n          label={\"Destination\"}\r\n          onSelectOption={v => setNewLink({\r\n            ...newLink,\r\n            destinationId: v || \"\"\r\n          })}>\r\n      </SelectEditor>\r\n      <IconButton color={\"primary\"} onClick={addNewLink} disabled={!isNewLinkValid()}>\r\n        <Add/>\r\n      </IconButton>\r\n    </div>\r\n    <Typography variant={\"h6\"}>Existing links</Typography>\r\n    {element?.links?.map((link, index) => (\r\n        <div key={link?.id || \"\" + index} className={\"flex-row justify-space-between\"}>\r\n          <CrossingLinkEditor\r\n              roadMap={roadMap}\r\n              onDelete={() => deleteLink(index)}\r\n              crossingLink={link}\r\n              relevantPoint={element}\r\n              onChange={link => updateLink(link, index)}\r\n          />\r\n        </div>\r\n    ))}\r\n  </div>\r\n}\r\n\r\nfunction createLink(): CrossingLink {\r\n  return {\r\n    id: undefined,\r\n    configurableType: \"CrossingLink\",\r\n    category: \"CrossingLink\",\r\n    sourceId: undefined,\r\n    destinationId: undefined,\r\n    props: [],\r\n  };\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {OkCancelDialog} from \"../../../widgets/OkCancelDialog\";\r\nimport {IconButton, Typography} from \"@material-ui/core\";\r\nimport {Delete, Settings} from \"@material-ui/icons\";\r\nimport RelevantPointLinksEditor from \"./RelevantPointLinksEditor\";\r\nimport ConfigurableEditorDialog from \"./ConfigurableEditorDialog\";\r\nimport {RelevantPoint, RoadMap} from \"@tramways/projects-service-api\";\r\n\r\nexport interface RelevantPointEditorDialogProps {\r\n    roadMap: RoadMap;\r\n    element: RelevantPoint;\r\n    onOk: (element: RelevantPoint) => void;\r\n    onDelete: () => void;\r\n    onCancel: () => void;\r\n}\r\n\r\nexport default function RelevantPointEditorDialog({\r\n    roadMap,\r\n    element: initialElement, onOk, onDelete, onCancel\r\n}: RelevantPointEditorDialogProps) {\r\n\r\n    const [editingConfiguration, setEditingConfiguration] = useState(false);\r\n\r\n    const [element, setElement] = useState<RelevantPoint>(initialElement);\r\n\r\n    return <OkCancelDialog onOk={() => onOk(element)} onCancel={onCancel} visible>\r\n        <div className={\"flex-row align-center\"}>\r\n            <Typography variant={\"h5\"}>Node {element.id}</Typography>\r\n            <IconButton color={\"primary\"} onClick={() => setEditingConfiguration(true)}>\r\n                <Settings/>\r\n            </IconButton>\r\n            <IconButton color={\"primary\"} onClick={() => onDelete()}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </div>\r\n        <RelevantPointLinksEditor\r\n            roadMap={roadMap}\r\n            element={element}\r\n            onChange={e => setElement(e)}/>\r\n        <ConfigurableEditorDialog\r\n            visible={editingConfiguration}\r\n            element={element}\r\n            onOk={(result) => {\r\n                setElement(result);\r\n                setEditingConfiguration(false)\r\n            }}\r\n            onCancel={() => setEditingConfiguration(false)}/>\r\n    </OkCancelDialog>\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {OkCancelDialog} from \"../../../widgets/OkCancelDialog\";\r\nimport {IconButton, Typography} from \"@material-ui/core\";\r\nimport {Delete, Settings} from \"@material-ui/icons\";\r\nimport SelectEditor from \"../../../inputs/SelectEditor\";\r\nimport ConfigurableEditorDialog from \"./ConfigurableEditorDialog\";\r\nimport {Lane, RoadMap} from \"@tramways/projects-service-api\";\r\nimport {roadMapPoints} from \"./roadmap-utils\";\r\n\r\nexport interface LaneEditorDialogProps {\r\n  roadMap: RoadMap,\r\n  element: Lane;\r\n  onOk: (element: Lane) => void;\r\n  onDelete: () => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nexport default function LaneEditorDialog(\r\n    {\r\n      roadMap,\r\n      element: initialElement,\r\n      onOk,\r\n      onDelete,\r\n      onCancel\r\n    }: LaneEditorDialogProps\r\n) {\r\n\r\n  const [editingConfiguration, setEditingConfiguration] = useState(false);\r\n\r\n  const [element, setElement] = useState<Lane>(initialElement);\r\n\r\n  return <OkCancelDialog onOk={() => onOk(element)} onCancel={onCancel} visible>\r\n    <div className={\"flex-row align-center\"}>\r\n      <Typography variant={\"h5\"}>Lane {element.id}</Typography>\r\n      <IconButton color={\"primary\"} onClick={() => setEditingConfiguration(true)}>\r\n        <Settings/>\r\n      </IconButton>\r\n      <IconButton color={\"primary\"} onClick={() => onDelete()}>\r\n        <Delete/>\r\n      </IconButton>\r\n    </div>\r\n    <div className={\"flex-row\"}>\r\n      <SelectEditor<string | undefined>\r\n          options={roadMapPoints(roadMap).map(point => point.id)}\r\n          value={element.sourceId}\r\n          label={\"Source\"}\r\n          onSelectOption={v => setElement({\r\n            ...element,\r\n            sourceId: v || \"\"\r\n          })}>\r\n      </SelectEditor>\r\n      <SelectEditor<string | undefined>\r\n          options={roadMapPoints(roadMap).map(point => point.id)}\r\n          value={element.destinationId}\r\n          label={\"Destination\"}\r\n          onSelectOption={v => setElement({\r\n            ...element,\r\n            destinationId: v || \"\"\r\n          })}>\r\n      </SelectEditor>\r\n    </div>\r\n    <ConfigurableEditorDialog\r\n        visible={editingConfiguration}\r\n        element={element}\r\n        onOk={(result) => {\r\n          setElement(result);\r\n          setEditingConfiguration(false)\r\n        }}\r\n        onCancel={() => setEditingConfiguration(false)}/>\r\n  </OkCancelDialog>\r\n}\r\n","import React from \"react\";\r\nimport IntegerPropertyInput from \"../inputs/IntegerPropertyInput\";\r\nimport {IntegerProperty} from \"@tramways/projects-service-api\";\r\n\r\nexport interface IntegerPropertyEditorProps {\r\n  property: IntegerProperty;\r\n  onChange: (element: IntegerProperty) => void;\r\n}\r\n\r\nexport default function IntegerPropertyEditor(\r\n    {\r\n      property, onChange\r\n    }: IntegerPropertyEditorProps\r\n) {\r\n\r\n  return <IntegerPropertyInput property={property} onChange={onChange}/>;\r\n}\r\n","import React from \"react\";\r\nimport DecimalPropertyInput from \"../inputs/DecimalPropertyInput\";\r\nimport {DecimalProperty} from \"@tramways/projects-service-api\";\r\n\r\nexport interface DecimalPropertyEditorProps {\r\n    property: DecimalProperty;\r\n    onChange: (element: DecimalProperty) => void;\r\n}\r\n\r\nexport default function DecimalPropertyEditor({\r\n    property, onChange\r\n}: DecimalPropertyEditorProps) {\r\n\r\n    return <DecimalPropertyInput property={property} onChange={onChange}/>;\r\n}\r\n","import React from \"react\";\r\nimport StringPropertyInput from \"../inputs/StringPropertyInput\";\r\nimport {StringProperty} from \"@tramways/projects-service-api\";\r\n\r\nexport interface StringPropertyEditorProps {\r\n  property: StringProperty;\r\n  onChange: (element: StringProperty) => void;\r\n}\r\n\r\nexport default function StringPropertyEditor(\r\n    {\r\n      property, onChange\r\n    }: StringPropertyEditorProps\r\n) {\r\n  return <StringPropertyInput property={property} onChange={onChange}/>;\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {IconButton, TextField, Typography} from \"@material-ui/core\";\r\nimport {Add, Delete} from \"@material-ui/icons\"\r\nimport useStyles from \"../../../../utils/useStyles\";\r\nimport ChoicePropertyInput from \"../inputs/ChoicePropertyInput\";\r\nimport {ChoiceElement, ChoiceProperty} from \"@tramways/projects-service-api\";\r\n\r\nexport interface ChoicePropertyEditorProps {\r\n    property: ChoiceProperty;\r\n    onChange: (element: ChoiceProperty) => void;\r\n}\r\n\r\nexport default function ChoicePropertyEditor({\r\n                                                 property, onChange\r\n                                             }: ChoicePropertyEditorProps) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [newItem, setNewItem] = useState<ChoiceElement>({id: \"\", label: \"\"});\r\n\r\n    function addNewItem() {\r\n        if (property && property.choices) {\r\n            onChange({\r\n                ...property,\r\n                choices: property.choices.concat([newItem])\r\n            });\r\n            setNewItem({id: \"\", label: \"\"});\r\n        }\r\n    }\r\n\r\n    function updateItem(index: number, item: ChoiceElement) {\r\n        if (property && property.choices) {\r\n            onChange({\r\n                ...property,\r\n                choices: property.choices.slice(0, index).concat([item]).concat(property.choices.slice(index + 1, property.choices.length))\r\n            });\r\n        }\r\n    }\r\n\r\n    function deleteItem(index: number) {\r\n        if (property && property.choices) {\r\n            onChange({\r\n                ...property,\r\n                choices: property.choices.slice(0, index).concat(property.choices.slice(index + 1, property.choices.length))\r\n            });\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant={\"h6\"}>New item</Typography>\r\n        <div className={\"flex-row justify-space-between\"}>\r\n            <TextField\r\n                className={classes.formControl}\r\n                label={\"ID\"}\r\n                variant=\"outlined\"\r\n                value={newItem.id}\r\n                onChange={evt => setNewItem({\r\n                    ...newItem,\r\n                    id: evt.target.value\r\n                })}\r\n            />\r\n            <TextField\r\n                className={classes.formControl}\r\n                label={\"Label\"}\r\n                variant=\"outlined\"\r\n                value={newItem.label}\r\n                onChange={evt => setNewItem({\r\n                    ...newItem,\r\n                    label: evt.target.value\r\n                })}\r\n            />\r\n            <IconButton color={\"primary\"} onClick={addNewItem}>\r\n                <Add/>\r\n            </IconButton>\r\n        </div>\r\n        <Typography variant={\"h6\"}>Existing choices</Typography>\r\n        {property?.choices?.map((choice, index) => (\r\n            <div key={choice?.id || \"\" + index} className={\"flex-row justify-space-between\"}>\r\n                <TextField\r\n                    className={classes.formControl}\r\n                    label={\"ID\"}\r\n                    variant=\"outlined\"\r\n                    value={choice.id}\r\n                    onChange={evt => updateItem(index, {\r\n                        ...choice,\r\n                        id: evt.target.value\r\n                    })}\r\n                />\r\n                <TextField\r\n                    className={classes.formControl}\r\n                    label={\"Label\"}\r\n                    variant=\"outlined\"\r\n                    value={choice.label}\r\n                    onChange={evt => updateItem(index, {\r\n                        ...choice,\r\n                        label: evt.target.value\r\n                    })}\r\n                />\r\n                <IconButton color={\"primary\"} onClick={() => deleteItem(index)}>\r\n                    <Delete/>\r\n                </IconButton>\r\n            </div>\r\n        ))}\r\n\r\n        <ChoicePropertyInput property={property} onChange={onChange}/>\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport SelectEditor from \"../../../../inputs/SelectEditor\";\r\nimport DistributionPropertyInput from \"../inputs/DistributionPropertyInput\";\r\nimport {newExponentialDistribution, newUniformDistribution} from \"../inputs/distributions/distribution-utils\";\r\nimport {DistributionProperty} from \"@tramways/projects-service-api\";\r\n\r\nexport interface DistributionPropertyEditorProps {\r\n    property: DistributionProperty;\r\n    onChange: (element: DistributionProperty) => void;\r\n}\r\n\r\nexport default function DistributionPropertyEditor(\r\n    {\r\n        property, onChange\r\n    }: DistributionPropertyEditorProps\r\n) {\r\n\r\n    function chooseDistributionType(type: string | null) {\r\n        let distribution;\r\n        switch (type) {\r\n            case \"ExponentialDistribution\":\r\n                distribution = newExponentialDistribution();\r\n                break;\r\n            case \"UniformDistribution\":\r\n            default:\r\n                distribution = newUniformDistribution();\r\n                break;\r\n        }\r\n        onChange({\r\n            ...property,\r\n            value: distribution\r\n        });\r\n    }\r\n\r\n    return <div>\r\n        <SelectEditor<string | null>\r\n            options={[\"UniformDistribution\", \"ExponentialDistribution\"]}\r\n            value={property?.value?.distributionType || null}\r\n            label={\"Type\"}\r\n            onSelectOption={chooseDistributionType}/>\r\n        {property?.value && <DistributionPropertyInput property={property} onChange={onChange}/>}\r\n    </div>\r\n}\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {\r\n  Avatar,\r\n  Dialog,\r\n  DialogTitle,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText\r\n} from \"@material-ui/core\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\nimport ApiContext from \"../../../../ApiContext\";\r\nimport {AnalysisType} from \"@tramways/analysis-service-api\";\r\n\r\nexport interface AvailableAnalysisDialogProps {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n  onChooseAnalysis: (id: AnalysisType) => void;\r\n  projectId?: string;\r\n  mapId?: string;\r\n}\r\n\r\nexport default function AvailableAnalysisDialog(\r\n    {\r\n      visible,\r\n      onClose,\r\n      onChooseAnalysis,\r\n      projectId,\r\n      mapId\r\n    }: AvailableAnalysisDialogProps\r\n) {\r\n  const {analysisApi} = useContext(ApiContext);\r\n\r\n  const [availableAnalysis, setAvailableAnalysis] = useState<AnalysisType[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (projectId && mapId) {\r\n      analysisApi.getAvailableAnalysis(projectId, mapId).then(response => {\r\n        setAvailableAnalysis(response.data);\r\n      });\r\n    }\r\n  }, [analysisApi, projectId, mapId]);\r\n\r\n  return (\r\n      <Dialog onClose={onClose} open={visible}>\r\n        <DialogTitle>Choose analysis type</DialogTitle>\r\n        <List>\r\n          {availableAnalysis.map(type => (\r\n              <ListItem\r\n                  key={type.id}\r\n                  button\r\n                  onClick={() => onChooseAnalysis(type)}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <BarChartIcon/>\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={type.name}/>\r\n              </ListItem>\r\n          ))}\r\n        </List>\r\n      </Dialog>\r\n  );\r\n}\r\n","import {Button} from \"@material-ui/core\";\r\nimport React, {useCallback, useContext, useEffect, useState} from \"react\";\r\nimport ApiContext from \"../../ApiContext\";\r\nimport {RouteComponentProps} from \"@reach/router\";\r\nimport {JSONComponent} from \"../../widgets/JSONComponent\";\r\nimport cytoscape from \"cytoscape\";\r\n// import RoadMapMenu from \"./roadmap/RoadMapMenu\";\r\n// import RelevantPointEditorDialog from \"./roadmap/RelevantPointEditorDialog\";\r\n// import LaneEditorDialog from \"./roadmap/LaneEditorDialog\";\r\nimport {decimalProperty} from \"./roadmap/properties\";\r\nimport {DecimalProperty, Lane, RelevantPoint, RoadMap} from \"@tramways/projects-service-api\";\r\nimport RoadMapMenu from \"./roadmap/RoadMapMenu\";\r\nimport {roadMapLanes, roadMapPoints} from \"./roadmap/roadmap-utils\";\r\nimport RelevantPointEditorDialog from \"./roadmap/RelevantPointEditorDialog\";\r\nimport LaneEditorDialog from \"./roadmap/LaneEditorDialog\";\r\nimport AvailableAnalysisDialog from \"./roadmap/analysis/AvailableAnalysisDialog\";\r\nimport {AnalysisType} from \"@tramways/analysis-service-api\";\r\n\r\ninterface RoadMapComponentProps extends RouteComponentProps {\r\n    projectId: string;\r\n    roadMap: RoadMap;\r\n    refresh: () => void;\r\n}\r\n\r\nexport default function RoadMapComponent(\r\n    {\r\n        projectId,\r\n        roadMap,\r\n        refresh,\r\n        navigate\r\n    }: RoadMapComponentProps\r\n) {\r\n\r\n    const {projectsApi} = useContext(ApiContext);\r\n\r\n    const editMap = useCallback(() => {\r\n        if (projectId && roadMap.uuid) {\r\n            return projectsApi.updateMap(projectId, roadMap.uuid, {\r\n                map: roadMap\r\n            }).then(() => {\r\n                refresh();\r\n            });\r\n        }\r\n    }, [roadMap, projectId, projectsApi, refresh]);\r\n\r\n    function addNode(node: RelevantPoint) {\r\n        roadMap.points?.push(node);\r\n        editMap()?.then(() => setShowMenu(false));\r\n    }\r\n\r\n    function updateNode(node: RelevantPoint) {\r\n        const index = roadMap.points?.findIndex(n => n.id === node.id);\r\n        if (index !== undefined && index >= 0 && roadMap.points) {\r\n            roadMap.points[index] = node;\r\n            editMap()?.then(() => setCurrentNode(null));\r\n        }\r\n    }\r\n\r\n    function deleteCurrentNode() {\r\n        const index = roadMap.points?.findIndex(n => n.id === currentNode?.id);\r\n        if (index !== undefined && index >= 0) {\r\n            roadMap.points?.splice(index, 1);\r\n            editMap()?.then(() => setCurrentNode(null));\r\n        }\r\n    }\r\n\r\n    function addLane(lane: RelevantPoint) {\r\n        roadMap.lanes?.push(lane);\r\n        editMap()?.then(() => setShowMenu(false));\r\n    }\r\n\r\n    function updateLane(lane: RelevantPoint) {\r\n        const index = roadMap.lanes?.findIndex(l => l.id === lane.id);\r\n        if (index !== undefined && index >= 0 && roadMap.lanes) {\r\n            roadMap.lanes[index] = lane;\r\n            editMap()?.then(() => setCurrentLane(null));\r\n        }\r\n    }\r\n\r\n    function deleteCurrentLane() {\r\n        const index = roadMap.lanes?.findIndex(l => l.id === currentLane?.id);\r\n        if (index !== undefined && index >= 0) {\r\n            roadMap.lanes?.splice(index, 1);\r\n            editMap()?.then(() => setCurrentLane(null));\r\n        }\r\n    }\r\n\r\n    const [currentNode, setCurrentNode] = useState<RelevantPoint | null>(null);\r\n    const [currentLane, setCurrentLane] = useState<Lane | null>(null);\r\n\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [showEditor, setShowEditor] = useState(false);\r\n    const [container, setContainer] = useState<HTMLElement | null>(null);\r\n    const [showAnalysisDialog, setShowAnalysisDialog] = useState(false);\r\n\r\n    const [, setChosenAnalysis] = useState<AnalysisType | null>(null);\r\n\r\n    const [eventX, setEventX] = useState<number>(0);\r\n    const [eventY, setEventY] = useState<number>(0);\r\n\r\n    const [, setNetwork] = useState<cytoscape.Core | null>(null);\r\n\r\n    function value(decimalProperty: DecimalProperty, def: number): number {\r\n        return decimalProperty.value || def;\r\n    }\r\n\r\n    const refreshNetwork = useCallback(() => {\r\n        if (roadMap && container) {\r\n            try {\r\n                const net = cytoscape({\r\n                    container: container,\r\n                    elements: {\r\n                        nodes: roadMapPoints(roadMap).map(rp => ({\r\n                            data: {\r\n                                id: rp.id\r\n                            },\r\n                            position: {\r\n                                x: value(decimalProperty(rp.props || [], 'x'), 0) * container.clientWidth,\r\n                                y: value(decimalProperty(rp.props || [], 'y'), 0) * container.clientHeight\r\n                            }\r\n                        })),\r\n                        edges: roadMapLanes(roadMap).map(lane => ({\r\n                            data: {\r\n                                id: lane.id,\r\n                                source: lane.sourceId || \"\",\r\n                                target: lane.destinationId || \"\"\r\n                            }\r\n                        }))\r\n                    },\r\n                    style: [\r\n                        {\r\n                            selector: 'node',\r\n                            style: {\r\n                                label: 'data(id)'\r\n                            }\r\n                        }, {\r\n                            selector: 'edge',\r\n                            style: {\r\n                                // \"mid-arrow-color\": \"#CCC\",\r\n                                \"mid-target-arrow-shape\": \"triangle\"\r\n                            }\r\n                        }\r\n                    ],\r\n                    layout: {\r\n                        name: 'preset',\r\n                        fit: true\r\n                    }\r\n                });\r\n                net.on('tapend', 'node', evt => {\r\n                    const id = evt.target.id();\r\n                    const newPos = evt.target.position();\r\n                    const newX = newPos.x / container.clientWidth;\r\n                    const newY = newPos.y / container.clientHeight;\r\n                    const points = roadMap.points || [];\r\n                    const point = points.find(p => p.id === id);\r\n                    if (point) {\r\n                        const pointProps = point.props || [];\r\n                        const oldX = decimalProperty(pointProps, 'x');\r\n                        const oldY = decimalProperty(pointProps, 'y');\r\n                        if (oldX.value !== newX && oldY.value !== newY) {\r\n                            oldX.value = newX;\r\n                            oldY.value = newY;\r\n                            editMap();\r\n                        }\r\n                    }\r\n                });\r\n                net.on('cxttapend ', 'node', evt => {\r\n                    setTimeout(() => {\r\n                        const id = evt.target.id();\r\n                        const points = roadMap?.points || [];\r\n                        const point = points.find(p => p.id === id);\r\n                        if (point) {\r\n                            setCurrentNode(point);\r\n                        }\r\n                    }, 0);\r\n                });\r\n                net.on('cxttapend ', 'edge', evt => {\r\n                    setTimeout(() => {\r\n                        const id = evt.target.id();\r\n                        const lanes = roadMap?.lanes || [];\r\n                        const lane = lanes.find(l => l.id === id);\r\n                        if (lane) {\r\n                            setCurrentLane(lane);\r\n                        }\r\n                    }, 0);\r\n                });\r\n                net.on('cxttapend', evt => {\r\n                    if (evt.target === net) {\r\n                        const evtPos = evt.position;\r\n                        setEventX(evtPos.x / container.clientWidth);\r\n                        setEventY(evtPos.y / container.clientHeight);\r\n                        setTimeout(() => {\r\n                            setShowMenu(true);\r\n                        }, 0);\r\n                    }\r\n                });\r\n                setNetwork(net);\r\n            } catch (err) {\r\n                console.log(\"Could not draw network\");\r\n                console.error(err);\r\n            }\r\n        }\r\n    }, [editMap, container, roadMap]);\r\n\r\n    useEffect(() => {\r\n        refreshNetwork();\r\n    }, [refreshNetwork]);\r\n\r\n    function navigateTo(path: string) {\r\n        if (navigate) {\r\n            navigate(path);\r\n        }\r\n    }\r\n\r\n    return (<>\r\n            <div className={\"button-row\"}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => setShowAnalysisDialog(true)}>\r\n                    Analyze\r\n                </Button>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={() => navigateTo(\"./analysis\")}>\r\n                    Analysis\r\n                </Button>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                        setShowEditor(true);\r\n                        setTimeout(refreshNetwork, 0);\r\n                    }}>\r\n                    Edit\r\n                </Button>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                        navigateTo(\"..\");\r\n                    }}>\r\n                    Back\r\n                </Button>\r\n            </div>\r\n            <div className={\"flex-row\"}>\r\n                {roadMap && (\r\n                    <div className={\"flex-grid network-container\"} ref={(element: HTMLDivElement) => {\r\n                        setContainer(element);\r\n                    }}/>\r\n                )}\r\n                {showEditor && (\r\n                    <div className={\"flex-grid\"}>\r\n                        <JSONComponent\r\n                            onClose={() => {\r\n                                setShowEditor(false);\r\n                                setTimeout(refreshNetwork, 0);\r\n                            }}\r\n                            visible={showEditor}\r\n                            initialJSON={roadMap || {}}\r\n                            onChange={editMap}\r\n                        />\r\n                    </div>\r\n                )}\r\n                {showMenu && (\r\n                    <RoadMapMenu\r\n                        roadMap={roadMap}\r\n                        x={eventX}\r\n                        y={eventY}\r\n                        onCreateNode={node => addNode(node)}\r\n                        onCreateLane={lane => addLane(lane)}\r\n                        onClose={() => setShowMenu(false)}\r\n                        visible={showMenu}\r\n                    />\r\n                )}\r\n                {showAnalysisDialog && (\r\n                    <AvailableAnalysisDialog\r\n                        projectId={projectId}\r\n                        mapId={roadMap?.uuid}\r\n                        onClose={() => setShowAnalysisDialog(false)}\r\n                        onChooseAnalysis={setChosenAnalysis}\r\n                        visible={showAnalysisDialog}\r\n                    />\r\n                )}\r\n                {/*{chosenAnalysis && (*/}\r\n                {/*    <AnalysisDialog*/}\r\n                {/*        visible={!!chosenAnalysis}*/}\r\n                {/*        projectId={projectId}*/}\r\n                {/*        mapId={roadMap?.uuid}*/}\r\n                {/*        analysis={chosenAnalysis}*/}\r\n                {/*        onClose={() => setChosenAnalysis(null)}*/}\r\n                {/*    />*/}\r\n                {/*)}*/}\r\n                {currentNode && (\r\n                    <RelevantPointEditorDialog\r\n                        roadMap={roadMap}\r\n                        onOk={node => updateNode(node)}\r\n                        onDelete={() => deleteCurrentNode()}\r\n                        onCancel={() => setCurrentNode(null)}\r\n                        element={currentNode}\r\n                    />\r\n                )}\r\n                {currentLane && (\r\n                    <LaneEditorDialog\r\n                        roadMap={roadMap}\r\n                        onOk={lane => updateLane(lane)}\r\n                        onDelete={() => deleteCurrentLane()}\r\n                        onCancel={() => setCurrentLane(null)}\r\n                        element={currentLane}\r\n                    />\r\n                )}\r\n                {/*{configurable && (*/}\r\n                {/*    <ConfigurableDialog*/}\r\n                {/*        visible={!!configurable}*/}\r\n                {/*        onClose={() => setConfigurable(null)}*/}\r\n                {/*        configurable={configurable}*/}\r\n                {/*        properties={smartMap.properties[configurable]}*/}\r\n                {/*        onConfirm={props => {*/}\r\n                {/*            console.log(props);*/}\r\n                {/*            smartMap.addProperties(configurable, props);*/}\r\n                {/*            smartMap.sendUpdates();*/}\r\n                {/*        }}*/}\r\n                {/*    />*/}\r\n                {/*)}*/}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, {useCallback, useContext, useEffect, useState} from \"react\";\r\nimport Page from \"../Page\";\r\nimport {RouteComponentProps} from \"@reach/router\";\r\nimport ApiContext from \"../../ApiContext\";\r\nimport {RoadMap} from \"@tramways/projects-service-api\";\r\nimport RoadMapComponent from \"./RoadMapComponent\";\r\n\r\ninterface RoadMapPageProps extends RouteComponentProps {\r\n  projectId?: string;\r\n  mapId?: string;\r\n}\r\n\r\nexport default function RoadMapPage({navigate, projectId, mapId}: RoadMapPageProps) {\r\n\r\n  const {projectsApi} = useContext(ApiContext);\r\n\r\n  const [map, setMap] = useState<RoadMap | null>(null);\r\n\r\n  const loadMap = useCallback(() => {\r\n    if (projectId && mapId) {\r\n      projectsApi.getMap(projectId, mapId).then(response => setMap(response.data));\r\n    }\r\n  }, [projectsApi, mapId, projectId]);\r\n\r\n  useEffect(() => {\r\n    loadMap();\r\n  }, [loadMap]);\r\n\r\n  if (!projectId || !map) {\r\n    return <div/>;\r\n  }\r\n\r\n  return (\r\n      <Page title={`Map ${map?.name}`}>\r\n        <RoadMapComponent\r\n            refresh={loadMap}\r\n            projectId={projectId}\r\n            roadMap={map}\r\n            navigate={navigate}\r\n        />\r\n      </Page>\r\n  );\r\n}\r\n","import {\r\n  AppBar,\r\n  Button,\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Toolbar,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport TramIcon from \"@material-ui/icons/Tram\";\r\nimport {navigate, Router} from \"@reach/router\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport AppContext from \"./AppContext\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport UsersPage from \"./pages/users/UsersPage\";\r\nimport SessionContext from \"./SessionContext\";\r\nimport Alert from \"./widgets/Alert\";\r\nimport ApiContext from \"./ApiContext\";\r\nimport useStyles from \"./utils/useStyles\";\r\nimport {AccountCircle} from \"@material-ui/icons\";\r\nimport ProfilePage from \"./pages/ProfilePage\";\r\nimport ProjectsPage from \"./pages/projects/ProjectsPage\";\r\nimport ProjectPage from \"./pages/projects/ProjectPage\";\r\nimport RoadMapPage from \"./pages/projects/RoadMapPage\";\r\nimport {User, UserRole} from \"@tramways/users-service-api\";\r\n\r\nconst Root = () => {\r\n  const {\r\n    error,\r\n    clearError,\r\n    message,\r\n    clearMessage,\r\n    loading,\r\n    appBarTitle\r\n  } = useContext(AppContext);\r\n\r\n  const {updateToken} = useContext(ApiContext);\r\n  const {user} = useContext(SessionContext);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [showDrawer, setShowDrawer] = useState(false);\r\n\r\n  function logout() {\r\n    updateToken(\"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      setTimeout(clearMessage, 2000);\r\n    }\r\n  }, [message, clearMessage])\r\n\r\n  return (\r\n      <div className=\"App\">\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={() => setShowDrawer(true)}>\r\n              <MenuIcon/>\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.appBarTitle}>\r\n              {appBarTitle}\r\n            </Typography>\r\n            {!user && (\r\n                <Button color=\"inherit\" onClick={() => navigate(\"/tramways/login\")}>\r\n                  Login\r\n                </Button>\r\n            )}\r\n            {user && (\r\n                <>\r\n                  <IconButton\r\n                      onClick={() => navigate(\"/tramways/profile\")}\r\n                      color=\"inherit\">\r\n                    <AccountCircle/>\r\n                  </IconButton>\r\n                  < Button color=\"inherit\" onClick={logout}>\r\n                    Logout\r\n                  </Button>\r\n                </>\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer open={showDrawer} onClose={() => setShowDrawer(false)}>\r\n          <div\r\n              onClick={() => setShowDrawer(false)}\r\n              onKeyDown={() => setShowDrawer(false)}>\r\n            {navContent(user)}\r\n          </div>\r\n        </Drawer>\r\n        {!user && !loading && (\r\n            <Router basepath={\"/tramways\"}>\r\n              <LoginPage default/>\r\n            </Router>\r\n        )}\r\n        {user && (\r\n            <Router basepath={\"/tramways\"}>\r\n              <ProfilePage path=\"/profile\" default/>\r\n              <ProjectsPage path=\"/projects\"/>\r\n              <ProjectPage path=\"/projects/:projectId\"/>\r\n              <RoadMapPage path=\"/projects/:projectId/:mapId\"/>\r\n              {/*<AnalysisListPage path=\"projects/:projectId/:mapId/analysis\"/>*/}\r\n\r\n              {/*<ConfigurationsPage path=\"/configurations\"/>*/}\r\n              {/*<NewConfigurationPage path=\"configurations/new\" />*/}\r\n              {/*<ConfigurationPage path=\"configurations/:confId\" />*/}\r\n\r\n              <UsersPage path=\"/users\"/>\r\n            </Router>\r\n        )}\r\n\r\n        <Alert visible={!!error} onClose={clearError}>\r\n          <Typography color=\"error\">{error}</Typography>\r\n        </Alert>\r\n\r\n        <Alert visible={!!message}>\r\n          <Typography>{message}</Typography>\r\n        </Alert>\r\n        {/* <header className=\"App-header\">\r\n        <XYChart id=\"test\" data={[{ x: 0, y: 0 }, { x: 1, y: 1 }]} />\r\n      </header> */}\r\n      </div>\r\n  );\r\n};\r\n\r\nfunction navContent(loggedUser: User | null) {\r\n\r\n  const items = [];\r\n\r\n  if (loggedUser && loggedUser.roles) {\r\n    if (loggedUser.roles.find(r => r === UserRole.Client)) {\r\n      items.push((\r\n          <ListItem key={\"projects\"} button onClick={() => navigate(\"/tramways/projects\")}>\r\n            <ListItemIcon>\r\n              <TramIcon/>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Projects\"/>\r\n          </ListItem>\r\n      ));\r\n    }\r\n    if (loggedUser.roles.find(r => r === UserRole.Expert)) {\r\n      items.push((\r\n          <ListItem key={\"configurations\"} button onClick={() => navigate(\"/tramways/configurations\")}>\r\n            <ListItemIcon>\r\n              <SettingsIcon/>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Configurations\"/>\r\n          </ListItem>\r\n      ));\r\n    }\r\n    if (loggedUser.roles.find(r => r === UserRole.Admin)) {\r\n      items.push((\r\n          <ListItem key={\"users\"} button onClick={() => navigate(\"/tramways/users\")}>\r\n            <ListItemIcon>\r\n              <GroupIcon/>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Users\"/>\r\n          </ListItem>\r\n      ));\r\n    }\r\n  }\r\n  return <List>\r\n    {items}\r\n  </List>\r\n}\r\n\r\n\r\nexport default Root;\r\n","import Axios, {AxiosError} from 'axios';\r\n\r\nconst registerInterceptor = (\r\n    setError: (err: string) => void,\r\n    setWarning: (err: string) => void\r\n) => {\r\n  Axios.interceptors.request.use(\r\n      conf => conf,\r\n      error => Promise.reject(error)\r\n  );\r\n\r\n  Axios.interceptors.response.use(\r\n      next => Promise.resolve(next),\r\n      (error: AxiosError) => {\r\n        if (error.isAxiosError) {\r\n          if (error.response) {\r\n            if (error.response.status === 403) {\r\n              setWarning(\"Please sign in\");\r\n            } else {\r\n              if (error.response.data) {\r\n                if (error.response.data.value) {\r\n                  setError(error.response.data.value);\r\n                } else if (error.response.data.error) {\r\n                  setError(error.response.data.error);\r\n                } else {\r\n                  setError(error.response.data);\r\n                }\r\n              } else {\r\n                setError(\"Unexpected error\")\r\n              }\r\n            }\r\n          } else if (error.request) {\r\n            setError(\"Errore durante la comunicazione con il server\")\r\n          } else {\r\n            setError(\"Unexpected error\");\r\n          }\r\n        } else {\r\n          setError(\"Unexpected error\");\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n  );\r\n}\r\n\r\nexport default registerInterceptor;\r\n","import {Configuration, UsersApi} from \"@tramways/users-service-api\";\r\n\r\nexport default function configureUsersApi(config) {\r\n    return new UsersApi(new Configuration(config));\r\n}\r\n","import {Configuration, ProjectsApi} from \"@tramways/projects-service-api\";\r\n\r\nexport default function configureProjectsApi(config) {\r\n    return new ProjectsApi(new Configuration(config));\r\n}\r\n","import {AnalysisApi, Configuration} from \"@tramways/analysis-service-api\";\r\n\r\nexport default function configureAnalysisApi(config) {\r\n    return new AnalysisApi(new Configuration(config));\r\n}\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport Root from \"./Root\";\r\nimport AppContext from \"./AppContext\";\r\nimport ApiContext from \"./ApiContext\";\r\nimport Cookies from \"js-cookie\";\r\nimport SessionContext from \"./SessionContext\";\r\nimport registerInterceptors from \"./utils/errors-interceptor\";\r\nimport {User} from \"@tramways/users-service-api\";\r\nimport configureUsersApi from \"./hooks/configureUsersApi\";\r\nimport configureProjectsApi from \"./hooks/configureProjectsApi\";\r\nimport configureAnalysisApi from \"./hooks/configureAnalysisApi\";\r\n\r\nexport default function App() {\r\n\r\n    const [error, setError] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [loading, setLoading] = useState(0);\r\n    const [appBarTitle, setAppBarTitle] = useState(\"\");\r\n\r\n    const clearError = useCallback(() => setError(\"\"), []);\r\n    const notifyError = useCallback(err => setError(err), []);\r\n    const notifyMessage = useCallback(msg => setMessage(msg), []);\r\n    const clearMessage = useCallback(() => setMessage(\"\"), []);\r\n    const stopLoading = useCallback(() => setLoading(nLoading => nLoading - 1), []);\r\n    const startLoading = useCallback(() => setLoading(nLoading => nLoading + 1), []);\r\n\r\n    const [token, setToken] = useState(Cookies.get('authorization'));\r\n    const [loggedUser, setLoggedUser] = useState<User | null>(null);\r\n\r\n    registerInterceptors(notifyError, notifyMessage);\r\n\r\n    const config = {\r\n        accessToken: token,\r\n        basePath: 'http://localhost:8762/tramways/rest'\r\n    };\r\n    const [usersApi, setUsersApi] = useState(configureUsersApi(config));\r\n    const [projectsApi, setProjectsApi] = useState(configureProjectsApi(config));\r\n    // const [configurationsApi, setConfigurationApi] = useState(new ConfigurationsApi(new Configuration(config)));\r\n    const [analysisApi, setAnalysisApi] = useState(configureAnalysisApi(config));\r\n\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    const refreshLoggedUser = useCallback(() => {\r\n        usersApi.logged()\r\n            .then(response => setLoggedUser(response.data))\r\n            .catch(() => setLoggedUser(null))\r\n            .then(() => setLoaded(true));\r\n    }, [usersApi]);\r\n\r\n    const updateToken = useCallback((newToken) => {\r\n        setToken(newToken);\r\n        Cookies.set(\"authorization\", newToken);\r\n\r\n        const newConfig = {\r\n            accessToken: newToken,\r\n            basePath: 'http://localhost:8762/tramways/rest'\r\n        };\r\n        setUsersApi(configureUsersApi(newConfig));\r\n        setProjectsApi(configureProjectsApi(newConfig));\r\n        // setConfigurationApi(new ConfigurationsApi(new Configuration(newConfig)));\r\n        setAnalysisApi(configureAnalysisApi(newConfig));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        refreshLoggedUser();\r\n    }, [refreshLoggedUser]);\r\n\r\n    if (!loaded) {\r\n        return <div/>;\r\n    }\r\n\r\n    return <AppContext.Provider value={{\r\n        error,\r\n        notifyError,\r\n        clearError,\r\n        message,\r\n        notifyMessage,\r\n        clearMessage,\r\n        loading,\r\n        startLoading,\r\n        stopLoading,\r\n        appBarTitle,\r\n        setAppBarTitle\r\n    }}>\r\n        <ApiContext.Provider value={{\r\n            usersApi,\r\n            projectsApi,\r\n            // configurationsApi,\r\n            analysisApi,\r\n            updateToken,\r\n        }}>\r\n            <SessionContext.Provider value={{\r\n                user: loggedUser,\r\n                refreshUser: refreshLoggedUser\r\n            }}>\r\n                <Root/>\r\n            </SessionContext.Provider>\r\n        </ApiContext.Provider>\r\n    </AppContext.Provider>\r\n}\r\n","import * as ReactDOM from \"react-dom\";\r\nimport * as React from \"react\";\r\nimport App from \"./App\";\r\n\r\nimport './index.scss';\r\nrequire(\"jsoneditor/dist/jsoneditor.css\");\r\n\r\nReactDOM.render(\r\n    <App/>, document.getElementById('app')\r\n);\r\n"],"sourceRoot":""}